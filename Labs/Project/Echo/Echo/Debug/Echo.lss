
Echo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00000bc6  00000c5a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bc6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000047  00800108  00800108  00000c62  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c62  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c94  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000cd4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e6b  00000000  00000000  00000d9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008f1  00000000  00000000  00001c07  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000679  00000000  00000000  000024f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001bc  00000000  00000000  00002b74  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000056c  00000000  00000000  00002d30  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004b8  00000000  00000000  0000329c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00003754  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
   4:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
   8:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
   c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  10:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  14:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  18:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  1c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  20:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  24:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  28:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  2c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  30:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  34:	0c 94 96 01 	jmp	0x32c	; 0x32c <__vector_13>
  38:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  3c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  40:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  44:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  48:	0c 94 ad 01 	jmp	0x35a	; 0x35a <__vector_18>
  4c:	0c 94 db 01 	jmp	0x3b6	; 0x3b6 <__vector_19>
  50:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  54:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  58:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  5c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  60:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  64:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 40       	sbci	r16, 0x00	; 0
  6a:	7a 10       	cpse	r7, r10
  6c:	f3 5a       	subi	r31, 0xA3	; 163
  6e:	00 a0       	ldd	r0, Z+32	; 0x20
  70:	72 4e       	sbci	r23, 0xE2	; 226
  72:	18 09       	sbc	r17, r8
  74:	00 10       	cpse	r0, r0
  76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__ftoa_engine+0x1e>
  78:	e8 00       	.word	0x00e8	; ????
  7a:	00 e8       	ldi	r16, 0x80	; 128
  7c:	76 48       	sbci	r23, 0x86	; 134
  7e:	17 00       	.word	0x0017	; ????
  80:	00 e4       	ldi	r16, 0x40	; 64
  82:	0b 54       	subi	r16, 0x4B	; 75
  84:	02 00       	.word	0x0002	; ????
  86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
  88:	9a 3b       	cpi	r25, 0xBA	; 186
  8a:	00 00       	nop
  8c:	00 e1       	ldi	r16, 0x10	; 16
  8e:	f5 05       	cpc	r31, r5
  90:	00 00       	nop
  92:	80 96       	adiw	r24, 0x20	; 32
  94:	98 00       	.word	0x0098	; ????
  96:	00 00       	nop
  98:	40 42       	sbci	r20, 0x20	; 32
  9a:	0f 00       	.word	0x000f	; ????
  9c:	00 00       	nop
  9e:	a0 86       	std	Z+8, r10	; 0x08
  a0:	01 00       	.word	0x0001	; ????
  a2:	00 00       	nop
  a4:	10 27       	eor	r17, r16
  a6:	00 00       	nop
  a8:	00 00       	nop
  aa:	e8 03       	fmulsu	r22, r16
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	64 00       	.word	0x0064	; ????
  b2:	00 00       	nop
  b4:	00 00       	nop
  b6:	0a 00       	.word	0x000a	; ????
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	01 00       	.word	0x0001	; ????
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	2c 76       	andi	r18, 0x6C	; 108
  c4:	d8 88       	ldd	r13, Y+16	; 0x10
  c6:	dc 67       	ori	r29, 0x7C	; 124
  c8:	4f 08       	sbc	r4, r15
  ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
  cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
  ce:	ae 59       	subi	r26, 0x9E	; 158
  d0:	e1 b1       	in	r30, 0x01	; 1
  d2:	b7 96       	adiw	r30, 0x27	; 39
  d4:	e5 e3       	ldi	r30, 0x35	; 53
  d6:	e4 53       	subi	r30, 0x34	; 52
  d8:	c6 3a       	cpi	r28, 0xA6	; 166
  da:	e6 51       	subi	r30, 0x16	; 22
  dc:	99 76       	andi	r25, 0x69	; 105
  de:	96 e8       	ldi	r25, 0x86	; 134
  e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <__umulhisi3+0x1c>
  e2:	84 26       	eor	r8, r20
  e4:	eb 89       	ldd	r30, Y+19	; 0x13
  e6:	8c 9b       	sbis	0x11, 4	; 17
  e8:	62 ed       	ldi	r22, 0xD2	; 210
  ea:	40 7c       	andi	r20, 0xC0	; 192
  ec:	6f fc       	.word	0xfc6f	; ????
  ee:	ef bc       	out	0x2f, r14	; 47
  f0:	9c 9f       	mul	r25, r28
  f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
  f4:	ba a5       	ldd	r27, Y+42	; 0x2a
  f6:	6f a5       	ldd	r22, Y+47	; 0x2f
  f8:	f4 90       	lpm	r15, Z
  fa:	05 5a       	subi	r16, 0xA5	; 165
  fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
  fe:	5c 93       	st	X, r21
 100:	6b 6c       	ori	r22, 0xCB	; 203
 102:	f9 67       	ori	r31, 0x79	; 121
 104:	6d c1       	rjmp	.+730    	; 0x3e0 <__vector_19+0x2a>
 106:	1b fc       	.word	0xfc1b	; ????
 108:	e0 e4       	ldi	r30, 0x40	; 64
 10a:	0d 47       	sbci	r16, 0x7D	; 125
 10c:	fe f5       	brtc	.+126    	; 0x18c <.do_clear_bss_loop>
 10e:	20 e6       	ldi	r18, 0x60	; 96
 110:	b5 00       	.word	0x00b5	; ????
 112:	d0 ed       	ldi	r29, 0xD0	; 208
 114:	90 2e       	mov	r9, r16
 116:	03 00       	.word	0x0003	; ????
 118:	94 35       	cpi	r25, 0x54	; 84
 11a:	77 05       	cpc	r23, r7
 11c:	00 80       	ld	r0, Z
 11e:	84 1e       	adc	r8, r20
 120:	08 00       	.word	0x0008	; ????
 122:	00 20       	and	r0, r0
 124:	4e 0a       	sbc	r4, r30
 126:	00 00       	nop
 128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
 12a:	0c 33       	cpi	r16, 0x3C	; 60
 12c:	33 33       	cpi	r19, 0x33	; 51
 12e:	33 0f       	add	r19, r19
 130:	98 6e       	ori	r25, 0xE8	; 232
 132:	12 83       	std	Z+2, r17	; 0x02
 134:	11 41       	sbci	r17, 0x11	; 17
 136:	ef 8d       	ldd	r30, Y+31	; 0x1f
 138:	21 14       	cp	r2, r1
 13a:	89 3b       	cpi	r24, 0xB9	; 185
 13c:	e6 55       	subi	r30, 0x56	; 86
 13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
 140:	fe e6       	ldi	r31, 0x6E	; 110
 142:	db 18       	sub	r13, r11
 144:	d1 84       	ldd	r13, Z+9	; 0x09
 146:	4b 38       	cpi	r20, 0x8B	; 139
 148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
 14a:	7c 1d       	adc	r23, r12
 14c:	90 1d       	adc	r25, r0
 14e:	a4 bb       	out	0x14, r26	; 20
 150:	e4 24       	eor	r14, r4
 152:	20 32       	cpi	r18, 0x20	; 32
 154:	84 72       	andi	r24, 0x24	; 36
 156:	5e 22       	and	r5, r30
 158:	81 00       	.word	0x0081	; ????
 15a:	c9 f1       	breq	.+114    	; 0x1ce <GPIO_config_input_pullup+0x16>
 15c:	24 ec       	ldi	r18, 0xC4	; 196
 15e:	a1 e5       	ldi	r26, 0x51	; 81
 160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
 162:	11 24       	eor	r1, r1
 164:	1f be       	out	0x3f, r1	; 63
 166:	cf ef       	ldi	r28, 0xFF	; 255
 168:	d8 e0       	ldi	r29, 0x08	; 8
 16a:	de bf       	out	0x3e, r29	; 62
 16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
 16e:	11 e0       	ldi	r17, 0x01	; 1
 170:	a0 e0       	ldi	r26, 0x00	; 0
 172:	b1 e0       	ldi	r27, 0x01	; 1
 174:	e6 ec       	ldi	r30, 0xC6	; 198
 176:	fb e0       	ldi	r31, 0x0B	; 11
 178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
 17a:	05 90       	lpm	r0, Z+
 17c:	0d 92       	st	X+, r0
 17e:	a8 30       	cpi	r26, 0x08	; 8
 180:	b1 07       	cpc	r27, r17
 182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
 184:	21 e0       	ldi	r18, 0x01	; 1
 186:	a8 e0       	ldi	r26, 0x08	; 8
 188:	b1 e0       	ldi	r27, 0x01	; 1
 18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
 18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
 18e:	af 34       	cpi	r26, 0x4F	; 79
 190:	b2 07       	cpc	r27, r18
 192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>
 194:	0e 94 06 01 	call	0x20c	; 0x20c <main>
 198:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <_exit>

0000019c <__bad_interrupt>:
 19c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a0 <GPIO_config_output>:

void GPIO_config_input_nopull(volatile uint8_t *reg_name, uint8_t pin_num)
{
    *reg_name = *reg_name & ~(1<<pin_num);  // Data Direction Register
    reg_name++;                     // Change pointer to Data Register
    *reg_name = *reg_name & ~(1<<pin_num);   // Data Register
 1a0:	fc 01       	movw	r30, r24
 1a2:	40 81       	ld	r20, Z
 1a4:	21 e0       	ldi	r18, 0x01	; 1
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <GPIO_config_output+0xe>
 1aa:	22 0f       	add	r18, r18
 1ac:	33 1f       	adc	r19, r19
 1ae:	6a 95       	dec	r22
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <GPIO_config_output+0xa>
 1b2:	24 2b       	or	r18, r20
 1b4:	20 83       	st	Z, r18
 1b6:	08 95       	ret

000001b8 <GPIO_config_input_pullup>:
 * Input:    reg_name - Address of Data Direction Register, such as &DDRB
 *           pin_num - Pin designation in the interval 0 to 7
 * Returns:  none
 **********************************************************************/
void GPIO_config_input_pullup(volatile uint8_t *reg_name, uint8_t pin_num)
{
 1b8:	fc 01       	movw	r30, r24
    *reg_name = *reg_name & ~(1<<pin_num);  // Data Direction Register
 1ba:	80 81       	ld	r24, Z
 1bc:	21 e0       	ldi	r18, 0x01	; 1
 1be:	30 e0       	ldi	r19, 0x00	; 0
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <GPIO_config_input_pullup+0xe>
 1c2:	22 0f       	add	r18, r18
 1c4:	33 1f       	adc	r19, r19
 1c6:	6a 95       	dec	r22
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <GPIO_config_input_pullup+0xa>
 1ca:	92 2f       	mov	r25, r18
 1cc:	90 95       	com	r25
 1ce:	89 23       	and	r24, r25
 1d0:	80 83       	st	Z, r24
    reg_name++;                     // Change pointer to Data Register
    *reg_name = *reg_name | (1<<pin_num);   // Data Register
 1d2:	81 81       	ldd	r24, Z+1	; 0x01
 1d4:	28 2b       	or	r18, r24
 1d6:	21 83       	std	Z+1, r18	; 0x01
 1d8:	08 95       	ret

000001da <GPIO_write_low>:
 * Input:    reg_name - Address of Port Register, such as &PORTB
 *           pin_num - Pin designation in the interval 0 to 7
 * Returns:  none
 **********************************************************************/
void GPIO_write_low(volatile uint8_t *reg_name, uint8_t pin_num)
{
 1da:	fc 01       	movw	r30, r24
    *reg_name = *reg_name & ~(1<<pin_num);
 1dc:	90 81       	ld	r25, Z
 1de:	21 e0       	ldi	r18, 0x01	; 1
 1e0:	30 e0       	ldi	r19, 0x00	; 0
 1e2:	02 c0       	rjmp	.+4      	; 0x1e8 <GPIO_write_low+0xe>
 1e4:	22 0f       	add	r18, r18
 1e6:	33 1f       	adc	r19, r19
 1e8:	6a 95       	dec	r22
 1ea:	e2 f7       	brpl	.-8      	; 0x1e4 <GPIO_write_low+0xa>
 1ec:	20 95       	com	r18
 1ee:	29 23       	and	r18, r25
 1f0:	20 83       	st	Z, r18
 1f2:	08 95       	ret

000001f4 <GPIO_write_high>:
 * Function: GPIO_write_high()
 **********************************************************************/
void GPIO_write_high(volatile uint8_t *reg_name, uint8_t pin_num)

{
    *reg_name = *reg_name |(1<<pin_num);
 1f4:	fc 01       	movw	r30, r24
 1f6:	40 81       	ld	r20, Z
 1f8:	21 e0       	ldi	r18, 0x01	; 1
 1fa:	30 e0       	ldi	r19, 0x00	; 0
 1fc:	02 c0       	rjmp	.+4      	; 0x202 <GPIO_write_high+0xe>
 1fe:	22 0f       	add	r18, r18
 200:	33 1f       	adc	r19, r19
 202:	6a 95       	dec	r22
 204:	e2 f7       	brpl	.-8      	; 0x1fe <GPIO_write_high+0xa>
 206:	24 2b       	or	r18, r20
 208:	20 83       	st	Z, r18
 20a:	08 95       	ret

0000020c <main>:
#include <string.h>

volatile int TimerOverflow = 0;

int main(void)
{
 20c:	cf 93       	push	r28
 20e:	df 93       	push	r29
 210:	cd b7       	in	r28, 0x3d	; 61
 212:	de b7       	in	r29, 0x3e	; 62
 214:	2a 97       	sbiw	r28, 0x0a	; 10
 216:	0f b6       	in	r0, 0x3f	; 63
 218:	f8 94       	cli
 21a:	de bf       	out	0x3e, r29	; 62
 21c:	0f be       	out	0x3f, r0	; 63
 21e:	cd bf       	out	0x3d, r28	; 61
     
	 //input output setup
     
     GPIO_config_output(&DDRB, TRIGGER);
 220:	65 e0       	ldi	r22, 0x05	; 5
 222:	84 e2       	ldi	r24, 0x24	; 36
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <GPIO_config_output>
     //GPIO_write_low(&PORTB, TRIGGER);
     

	GPIO_config_input_pullup(&DDRD,ECHO);	/* Turn on Pull-up */
 22a:	60 e0       	ldi	r22, 0x00	; 0
 22c:	8a e2       	ldi	r24, 0x2A	; 42
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <GPIO_config_input_pullup>
		

    // Initialize UART to asynchronous, 8N1, 9600
    uart_init(UART_BAUD_SELECT(9600, F_CPU));
 234:	87 e6       	ldi	r24, 0x67	; 103
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	0e 94 05 02 	call	0x40a	; 0x40a <uart_init>
	
    // Configure 16-bit Timer/Counter1
	// we need to use Timer/Counter1 because it is the only one which has input capture mode
    
	// Enables interrupts by setting the global interrupt mask
	sei();	
 23c:	78 94       	sei
	//Enable overflow interrupt
	TIM1_overflow_interrupt_enable();
 23e:	ef e6       	ldi	r30, 0x6F	; 111
 240:	f0 e0       	ldi	r31, 0x00	; 0
 242:	80 81       	ld	r24, Z
 244:	81 60       	ori	r24, 0x01	; 1
 246:	80 83       	st	Z, r24
    // Infinite loop
    while (1)
    {
        /* Empty loop. All subsequent operations are performed exclusively 
         * inside interrupt service routines ISRs */
		GPIO_write_high(&PORTB, TRIGGER);
 248:	65 e0       	ldi	r22, 0x05	; 5
 24a:	85 e2       	ldi	r24, 0x25	; 37
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <GPIO_write_high>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 252:	25 e3       	ldi	r18, 0x35	; 53
 254:	2a 95       	dec	r18
 256:	f1 f7       	brne	.-4      	; 0x254 <main+0x48>
 258:	00 00       	nop
		_delay_us(10);
		GPIO_write_low(&PORTB, TRIGGER);
 25a:	65 e0       	ldi	r22, 0x05	; 5
 25c:	85 e2       	ldi	r24, 0x25	; 37
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	0e 94 ed 00 	call	0x1da	; 0x1da <GPIO_write_low>
		
		TCNT1 = 0;				/* Clear Timer counter */	
 264:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 268:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
			
		TIM1_overflow_4ms();	/* Capture on rising edge, No prescaler*/
 26c:	e1 e8       	ldi	r30, 0x81	; 129
 26e:	f0 e0       	ldi	r31, 0x00	; 0
 270:	80 81       	ld	r24, Z
 272:	89 7f       	andi	r24, 0xF9	; 249
 274:	80 83       	st	Z, r24
 276:	80 81       	ld	r24, Z
 278:	81 60       	ori	r24, 0x01	; 1
 27a:	80 83       	st	Z, r24
		TCCR1B = 1<<ICES1;
 27c:	80 e4       	ldi	r24, 0x40	; 64
 27e:	80 83       	st	Z, r24

		
		TIFR1 = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 280:	80 e2       	ldi	r24, 0x20	; 32
 282:	86 bb       	out	0x16, r24	; 22
		TIFR1 = 1<<TOV1;	/* Clear Timer Overflow flag */
 284:	81 e0       	ldi	r24, 0x01	; 1
 286:	86 bb       	out	0x16, r24	; 22
		
		/*Calculate width of Echo by Input Capture (ICP) */
		
		while ((TIFR1 & (1 << ICF1)) == 0);/* Wait for rising edge */
 288:	b5 9b       	sbis	0x16, 5	; 22
 28a:	fe cf       	rjmp	.-4      	; 0x288 <main+0x7c>
		TCNT1 = 0;			/* Clear Timer counter */
 28c:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 290:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
		TCCR1B = 0x01;		/* Capture on falling edge, No prescaler */
 294:	81 e0       	ldi	r24, 0x01	; 1
 296:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>

		TIFR1 = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 29a:	90 e2       	ldi	r25, 0x20	; 32
 29c:	96 bb       	out	0x16, r25	; 22
		TIFR1 = 1<<TOV1;	/* Clear Timer Overflow flag */
 29e:	86 bb       	out	0x16, r24	; 22
		TimerOverflow = 0;/* Clear Timer overflow count */
 2a0:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <__data_end+0x1>
 2a4:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__data_end>
		
		
		while ((TIFR1 & (1 << ICF1)) == 0);/* Wait for falling edge */
 2a8:	b5 9b       	sbis	0x16, 5	; 22
 2aa:	fe cf       	rjmp	.-4      	; 0x2a8 <main+0x9c>
		count = ICR1 + (65535 * TimerOverflow);	/* Take count */
 2ac:	40 91 86 00 	lds	r20, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 2b0:	50 91 87 00 	lds	r21, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 2b4:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <__data_end>
 2b8:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <__data_end+0x1>
 2bc:	2f ef       	ldi	r18, 0xFF	; 255
 2be:	3f ef       	ldi	r19, 0xFF	; 255
 2c0:	0e 94 42 03 	call	0x684	; 0x684 <__usmulhisi3>
 2c4:	64 0f       	add	r22, r20
 2c6:	75 1f       	adc	r23, r21
 2c8:	81 1d       	adc	r24, r1
 2ca:	91 1d       	adc	r25, r1
		/* 8MHz Timer freq, sound speed =343 m/s */
		distance = (double)count / 466.47;
 2cc:	0e 94 b6 02 	call	0x56c	; 0x56c <__floatsisf>
 2d0:	29 e2       	ldi	r18, 0x29	; 41
 2d2:	3c e3       	ldi	r19, 0x3C	; 60
 2d4:	49 ee       	ldi	r20, 0xE9	; 233
 2d6:	53 e4       	ldi	r21, 0x43	; 67
 2d8:	0e 94 42 02 	call	0x484	; 0x484 <__divsf3>

		
		dtostrf(distance, 2, 2, string);/* distance to string */
 2dc:	9e 01       	movw	r18, r28
 2de:	2f 5f       	subi	r18, 0xFF	; 255
 2e0:	3f 4f       	sbci	r19, 0xFF	; 255
 2e2:	79 01       	movw	r14, r18
 2e4:	89 01       	movw	r16, r18
 2e6:	22 e0       	ldi	r18, 0x02	; 2
 2e8:	42 e0       	ldi	r20, 0x02	; 2
 2ea:	0e 94 58 03 	call	0x6b0	; 0x6b0 <dtostrf>
		strcat(string, " cm   ");	/* Concat unit i.e.cm */
 2ee:	d7 01       	movw	r26, r14
 2f0:	0d 90       	ld	r0, X+
 2f2:	00 20       	and	r0, r0
 2f4:	e9 f7       	brne	.-6      	; 0x2f0 <main+0xe4>
 2f6:	11 97       	sbiw	r26, 0x01	; 1
 2f8:	87 e0       	ldi	r24, 0x07	; 7
 2fa:	e0 e0       	ldi	r30, 0x00	; 0
 2fc:	f1 e0       	ldi	r31, 0x01	; 1
 2fe:	01 90       	ld	r0, Z+
 300:	0d 92       	st	X+, r0
 302:	8a 95       	dec	r24
 304:	e1 f7       	brne	.-8      	; 0x2fe <main+0xf2>
		
		/* Print distance */
		uart_puts(string);
 306:	c7 01       	movw	r24, r14
 308:	0e 94 35 02 	call	0x46a	; 0x46a <uart_puts>
		uart_putc('\n');
 30c:	8a e0       	ldi	r24, 0x0A	; 10
 30e:	0e 94 20 02 	call	0x440	; 0x440 <uart_putc>
		uart_putc('\r');
 312:	8d e0       	ldi	r24, 0x0D	; 13
 314:	0e 94 20 02 	call	0x440	; 0x440 <uart_putc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 318:	3f ef       	ldi	r19, 0xFF	; 255
 31a:	83 ec       	ldi	r24, 0xC3	; 195
 31c:	99 e0       	ldi	r25, 0x09	; 9
 31e:	31 50       	subi	r19, 0x01	; 1
 320:	80 40       	sbci	r24, 0x00	; 0
 322:	90 40       	sbci	r25, 0x00	; 0
 324:	e1 f7       	brne	.-8      	; 0x31e <main+0x112>
 326:	00 c0       	rjmp	.+0      	; 0x328 <main+0x11c>
 328:	00 00       	nop
 32a:	8e cf       	rjmp	.-228    	; 0x248 <main+0x3c>

0000032c <__vector_13>:
    // Will never reach this
    return 0;
}

ISR(TIMER1_OVF_vect)
{
 32c:	1f 92       	push	r1
 32e:	0f 92       	push	r0
 330:	0f b6       	in	r0, 0x3f	; 63
 332:	0f 92       	push	r0
 334:	11 24       	eor	r1, r1
 336:	8f 93       	push	r24
 338:	9f 93       	push	r25
	
	TimerOverflow++;	/* Increment Timer Overflow count */			
 33a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
 33e:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x1>
 342:	01 96       	adiw	r24, 0x01	; 1
 344:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__data_end+0x1>
 348:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end>

 34c:	9f 91       	pop	r25
 34e:	8f 91       	pop	r24
 350:	0f 90       	pop	r0
 352:	0f be       	out	0x3f, r0	; 63
 354:	0f 90       	pop	r0
 356:	1f 90       	pop	r1
 358:	18 95       	reti

0000035a <__vector_18>:
    /* store buffer index */
    UART_RxTail = tmptail;

    UART_LastRxError = 0;
    return (lastRxError << 8) + data;
}/* uart_getc */
 35a:	1f 92       	push	r1
 35c:	0f 92       	push	r0
 35e:	0f b6       	in	r0, 0x3f	; 63
 360:	0f 92       	push	r0
 362:	11 24       	eor	r1, r1
 364:	2f 93       	push	r18
 366:	8f 93       	push	r24
 368:	9f 93       	push	r25
 36a:	ef 93       	push	r30
 36c:	ff 93       	push	r31
 36e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 372:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 376:	8c 71       	andi	r24, 0x1C	; 28
 378:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <UART_RxHead>
 37c:	ef 5f       	subi	r30, 0xFF	; 255
 37e:	ef 71       	andi	r30, 0x1F	; 31
 380:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <UART_RxTail>
 384:	e9 17       	cp	r30, r25
 386:	39 f0       	breq	.+14     	; 0x396 <__vector_18+0x3c>
 388:	e0 93 0c 01 	sts	0x010C, r30	; 0x80010c <UART_RxHead>
 38c:	f0 e0       	ldi	r31, 0x00	; 0
 38e:	e1 5f       	subi	r30, 0xF1	; 241
 390:	fe 4f       	sbci	r31, 0xFE	; 254
 392:	20 83       	st	Z, r18
 394:	01 c0       	rjmp	.+2      	; 0x398 <__vector_18+0x3e>
 396:	82 e0       	ldi	r24, 0x02	; 2
 398:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <UART_LastRxError>
 39c:	89 2b       	or	r24, r25
 39e:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <UART_LastRxError>
 3a2:	ff 91       	pop	r31
 3a4:	ef 91       	pop	r30
 3a6:	9f 91       	pop	r25
 3a8:	8f 91       	pop	r24
 3aa:	2f 91       	pop	r18
 3ac:	0f 90       	pop	r0
 3ae:	0f be       	out	0x3f, r0	; 63
 3b0:	0f 90       	pop	r0
 3b2:	1f 90       	pop	r1
 3b4:	18 95       	reti

000003b6 <__vector_19>:
 3b6:	1f 92       	push	r1
 3b8:	0f 92       	push	r0
 3ba:	0f b6       	in	r0, 0x3f	; 63
 3bc:	0f 92       	push	r0
 3be:	11 24       	eor	r1, r1
 3c0:	8f 93       	push	r24
 3c2:	9f 93       	push	r25
 3c4:	ef 93       	push	r30
 3c6:	ff 93       	push	r31
 3c8:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <UART_TxHead>
 3cc:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <UART_TxTail>
 3d0:	98 17       	cp	r25, r24
 3d2:	69 f0       	breq	.+26     	; 0x3ee <__vector_19+0x38>
 3d4:	e0 91 0d 01 	lds	r30, 0x010D	; 0x80010d <UART_TxTail>
 3d8:	ef 5f       	subi	r30, 0xFF	; 255
 3da:	ef 71       	andi	r30, 0x1F	; 31
 3dc:	e0 93 0d 01 	sts	0x010D, r30	; 0x80010d <UART_TxTail>
 3e0:	f0 e0       	ldi	r31, 0x00	; 0
 3e2:	e1 5d       	subi	r30, 0xD1	; 209
 3e4:	fe 4f       	sbci	r31, 0xFE	; 254
 3e6:	80 81       	ld	r24, Z
 3e8:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 3ec:	05 c0       	rjmp	.+10     	; 0x3f8 <__vector_19+0x42>
 3ee:	e1 ec       	ldi	r30, 0xC1	; 193
 3f0:	f0 e0       	ldi	r31, 0x00	; 0
 3f2:	80 81       	ld	r24, Z
 3f4:	8f 7d       	andi	r24, 0xDF	; 223
 3f6:	80 83       	st	Z, r24
 3f8:	ff 91       	pop	r31
 3fa:	ef 91       	pop	r30
 3fc:	9f 91       	pop	r25
 3fe:	8f 91       	pop	r24
 400:	0f 90       	pop	r0
 402:	0f be       	out	0x3f, r0	; 63
 404:	0f 90       	pop	r0
 406:	1f 90       	pop	r1
 408:	18 95       	reti

0000040a <uart_init>:
 40a:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <UART_TxHead>
 40e:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <UART_TxTail>
 412:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <UART_RxHead>
 416:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <UART_RxTail>
 41a:	28 2f       	mov	r18, r24
 41c:	39 2f       	mov	r19, r25
 41e:	33 23       	and	r19, r19
 420:	1c f4       	brge	.+6      	; 0x428 <uart_init+0x1e>
 422:	22 e0       	ldi	r18, 0x02	; 2
 424:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 428:	90 78       	andi	r25, 0x80	; 128
 42a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 42e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 432:	88 e9       	ldi	r24, 0x98	; 152
 434:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 438:	86 e0       	ldi	r24, 0x06	; 6
 43a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 43e:	08 95       	ret

00000440 <uart_putc>:
void uart_putc(unsigned char data)
{
    unsigned char tmphead;


    tmphead = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
 440:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <UART_TxHead>
 444:	2f 5f       	subi	r18, 0xFF	; 255
 446:	2f 71       	andi	r18, 0x1F	; 31

    while (tmphead == UART_TxTail)
 448:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <UART_TxTail>
 44c:	29 17       	cp	r18, r25
 44e:	e1 f3       	breq	.-8      	; 0x448 <uart_putc+0x8>
    {
        ;/* wait for free space in buffer */
    }

    UART_TxBuf[tmphead] = data;
 450:	e2 2f       	mov	r30, r18
 452:	f0 e0       	ldi	r31, 0x00	; 0
 454:	e1 5d       	subi	r30, 0xD1	; 209
 456:	fe 4f       	sbci	r31, 0xFE	; 254
 458:	80 83       	st	Z, r24
    UART_TxHead         = tmphead;
 45a:	20 93 0e 01 	sts	0x010E, r18	; 0x80010e <UART_TxHead>

    /* enable UDRE interrupt */
    UART0_CONTROL |= _BV(UART0_UDRIE);
 45e:	e1 ec       	ldi	r30, 0xC1	; 193
 460:	f0 e0       	ldi	r31, 0x00	; 0
 462:	80 81       	ld	r24, Z
 464:	80 62       	ori	r24, 0x20	; 32
 466:	80 83       	st	Z, r24
 468:	08 95       	ret

0000046a <uart_puts>:
 * Purpose:  transmit string to UART
 * Input:    string to be transmitted
 * Returns:  none
 **************************************************************************/
void uart_puts(const char *s)
{
 46a:	cf 93       	push	r28
 46c:	df 93       	push	r29
 46e:	ec 01       	movw	r28, r24
    while (*s)
 470:	03 c0       	rjmp	.+6      	; 0x478 <uart_puts+0xe>
        uart_putc(*s++);
 472:	21 96       	adiw	r28, 0x01	; 1
 474:	0e 94 20 02 	call	0x440	; 0x440 <uart_putc>
 * Input:    string to be transmitted
 * Returns:  none
 **************************************************************************/
void uart_puts(const char *s)
{
    while (*s)
 478:	88 81       	ld	r24, Y
 47a:	81 11       	cpse	r24, r1
 47c:	fa cf       	rjmp	.-12     	; 0x472 <uart_puts+0x8>
        uart_putc(*s++);
}/* uart_puts */
 47e:	df 91       	pop	r29
 480:	cf 91       	pop	r28
 482:	08 95       	ret

00000484 <__divsf3>:
 484:	0e 94 56 02 	call	0x4ac	; 0x4ac <__divsf3x>
 488:	0c 94 08 03 	jmp	0x610	; 0x610 <__fp_round>
 48c:	0e 94 01 03 	call	0x602	; 0x602 <__fp_pscB>
 490:	58 f0       	brcs	.+22     	; 0x4a8 <__divsf3+0x24>
 492:	0e 94 fa 02 	call	0x5f4	; 0x5f4 <__fp_pscA>
 496:	40 f0       	brcs	.+16     	; 0x4a8 <__divsf3+0x24>
 498:	29 f4       	brne	.+10     	; 0x4a4 <__divsf3+0x20>
 49a:	5f 3f       	cpi	r21, 0xFF	; 255
 49c:	29 f0       	breq	.+10     	; 0x4a8 <__divsf3+0x24>
 49e:	0c 94 f1 02 	jmp	0x5e2	; 0x5e2 <__fp_inf>
 4a2:	51 11       	cpse	r21, r1
 4a4:	0c 94 3c 03 	jmp	0x678	; 0x678 <__fp_szero>
 4a8:	0c 94 f7 02 	jmp	0x5ee	; 0x5ee <__fp_nan>

000004ac <__divsf3x>:
 4ac:	0e 94 19 03 	call	0x632	; 0x632 <__fp_split3>
 4b0:	68 f3       	brcs	.-38     	; 0x48c <__divsf3+0x8>

000004b2 <__divsf3_pse>:
 4b2:	99 23       	and	r25, r25
 4b4:	b1 f3       	breq	.-20     	; 0x4a2 <__divsf3+0x1e>
 4b6:	55 23       	and	r21, r21
 4b8:	91 f3       	breq	.-28     	; 0x49e <__divsf3+0x1a>
 4ba:	95 1b       	sub	r25, r21
 4bc:	55 0b       	sbc	r21, r21
 4be:	bb 27       	eor	r27, r27
 4c0:	aa 27       	eor	r26, r26
 4c2:	62 17       	cp	r22, r18
 4c4:	73 07       	cpc	r23, r19
 4c6:	84 07       	cpc	r24, r20
 4c8:	38 f0       	brcs	.+14     	; 0x4d8 <__divsf3_pse+0x26>
 4ca:	9f 5f       	subi	r25, 0xFF	; 255
 4cc:	5f 4f       	sbci	r21, 0xFF	; 255
 4ce:	22 0f       	add	r18, r18
 4d0:	33 1f       	adc	r19, r19
 4d2:	44 1f       	adc	r20, r20
 4d4:	aa 1f       	adc	r26, r26
 4d6:	a9 f3       	breq	.-22     	; 0x4c2 <__divsf3_pse+0x10>
 4d8:	35 d0       	rcall	.+106    	; 0x544 <__divsf3_pse+0x92>
 4da:	0e 2e       	mov	r0, r30
 4dc:	3a f0       	brmi	.+14     	; 0x4ec <__divsf3_pse+0x3a>
 4de:	e0 e8       	ldi	r30, 0x80	; 128
 4e0:	32 d0       	rcall	.+100    	; 0x546 <__divsf3_pse+0x94>
 4e2:	91 50       	subi	r25, 0x01	; 1
 4e4:	50 40       	sbci	r21, 0x00	; 0
 4e6:	e6 95       	lsr	r30
 4e8:	00 1c       	adc	r0, r0
 4ea:	ca f7       	brpl	.-14     	; 0x4de <__divsf3_pse+0x2c>
 4ec:	2b d0       	rcall	.+86     	; 0x544 <__divsf3_pse+0x92>
 4ee:	fe 2f       	mov	r31, r30
 4f0:	29 d0       	rcall	.+82     	; 0x544 <__divsf3_pse+0x92>
 4f2:	66 0f       	add	r22, r22
 4f4:	77 1f       	adc	r23, r23
 4f6:	88 1f       	adc	r24, r24
 4f8:	bb 1f       	adc	r27, r27
 4fa:	26 17       	cp	r18, r22
 4fc:	37 07       	cpc	r19, r23
 4fe:	48 07       	cpc	r20, r24
 500:	ab 07       	cpc	r26, r27
 502:	b0 e8       	ldi	r27, 0x80	; 128
 504:	09 f0       	breq	.+2      	; 0x508 <__divsf3_pse+0x56>
 506:	bb 0b       	sbc	r27, r27
 508:	80 2d       	mov	r24, r0
 50a:	bf 01       	movw	r22, r30
 50c:	ff 27       	eor	r31, r31
 50e:	93 58       	subi	r25, 0x83	; 131
 510:	5f 4f       	sbci	r21, 0xFF	; 255
 512:	3a f0       	brmi	.+14     	; 0x522 <__divsf3_pse+0x70>
 514:	9e 3f       	cpi	r25, 0xFE	; 254
 516:	51 05       	cpc	r21, r1
 518:	78 f0       	brcs	.+30     	; 0x538 <__divsf3_pse+0x86>
 51a:	0c 94 f1 02 	jmp	0x5e2	; 0x5e2 <__fp_inf>
 51e:	0c 94 3c 03 	jmp	0x678	; 0x678 <__fp_szero>
 522:	5f 3f       	cpi	r21, 0xFF	; 255
 524:	e4 f3       	brlt	.-8      	; 0x51e <__divsf3_pse+0x6c>
 526:	98 3e       	cpi	r25, 0xE8	; 232
 528:	d4 f3       	brlt	.-12     	; 0x51e <__divsf3_pse+0x6c>
 52a:	86 95       	lsr	r24
 52c:	77 95       	ror	r23
 52e:	67 95       	ror	r22
 530:	b7 95       	ror	r27
 532:	f7 95       	ror	r31
 534:	9f 5f       	subi	r25, 0xFF	; 255
 536:	c9 f7       	brne	.-14     	; 0x52a <__divsf3_pse+0x78>
 538:	88 0f       	add	r24, r24
 53a:	91 1d       	adc	r25, r1
 53c:	96 95       	lsr	r25
 53e:	87 95       	ror	r24
 540:	97 f9       	bld	r25, 7
 542:	08 95       	ret
 544:	e1 e0       	ldi	r30, 0x01	; 1
 546:	66 0f       	add	r22, r22
 548:	77 1f       	adc	r23, r23
 54a:	88 1f       	adc	r24, r24
 54c:	bb 1f       	adc	r27, r27
 54e:	62 17       	cp	r22, r18
 550:	73 07       	cpc	r23, r19
 552:	84 07       	cpc	r24, r20
 554:	ba 07       	cpc	r27, r26
 556:	20 f0       	brcs	.+8      	; 0x560 <__divsf3_pse+0xae>
 558:	62 1b       	sub	r22, r18
 55a:	73 0b       	sbc	r23, r19
 55c:	84 0b       	sbc	r24, r20
 55e:	ba 0b       	sbc	r27, r26
 560:	ee 1f       	adc	r30, r30
 562:	88 f7       	brcc	.-30     	; 0x546 <__divsf3_pse+0x94>
 564:	e0 95       	com	r30
 566:	08 95       	ret

00000568 <__floatunsisf>:
 568:	e8 94       	clt
 56a:	09 c0       	rjmp	.+18     	; 0x57e <__floatsisf+0x12>

0000056c <__floatsisf>:
 56c:	97 fb       	bst	r25, 7
 56e:	3e f4       	brtc	.+14     	; 0x57e <__floatsisf+0x12>
 570:	90 95       	com	r25
 572:	80 95       	com	r24
 574:	70 95       	com	r23
 576:	61 95       	neg	r22
 578:	7f 4f       	sbci	r23, 0xFF	; 255
 57a:	8f 4f       	sbci	r24, 0xFF	; 255
 57c:	9f 4f       	sbci	r25, 0xFF	; 255
 57e:	99 23       	and	r25, r25
 580:	a9 f0       	breq	.+42     	; 0x5ac <__floatsisf+0x40>
 582:	f9 2f       	mov	r31, r25
 584:	96 e9       	ldi	r25, 0x96	; 150
 586:	bb 27       	eor	r27, r27
 588:	93 95       	inc	r25
 58a:	f6 95       	lsr	r31
 58c:	87 95       	ror	r24
 58e:	77 95       	ror	r23
 590:	67 95       	ror	r22
 592:	b7 95       	ror	r27
 594:	f1 11       	cpse	r31, r1
 596:	f8 cf       	rjmp	.-16     	; 0x588 <__floatsisf+0x1c>
 598:	fa f4       	brpl	.+62     	; 0x5d8 <__floatsisf+0x6c>
 59a:	bb 0f       	add	r27, r27
 59c:	11 f4       	brne	.+4      	; 0x5a2 <__floatsisf+0x36>
 59e:	60 ff       	sbrs	r22, 0
 5a0:	1b c0       	rjmp	.+54     	; 0x5d8 <__floatsisf+0x6c>
 5a2:	6f 5f       	subi	r22, 0xFF	; 255
 5a4:	7f 4f       	sbci	r23, 0xFF	; 255
 5a6:	8f 4f       	sbci	r24, 0xFF	; 255
 5a8:	9f 4f       	sbci	r25, 0xFF	; 255
 5aa:	16 c0       	rjmp	.+44     	; 0x5d8 <__floatsisf+0x6c>
 5ac:	88 23       	and	r24, r24
 5ae:	11 f0       	breq	.+4      	; 0x5b4 <__floatsisf+0x48>
 5b0:	96 e9       	ldi	r25, 0x96	; 150
 5b2:	11 c0       	rjmp	.+34     	; 0x5d6 <__floatsisf+0x6a>
 5b4:	77 23       	and	r23, r23
 5b6:	21 f0       	breq	.+8      	; 0x5c0 <__floatsisf+0x54>
 5b8:	9e e8       	ldi	r25, 0x8E	; 142
 5ba:	87 2f       	mov	r24, r23
 5bc:	76 2f       	mov	r23, r22
 5be:	05 c0       	rjmp	.+10     	; 0x5ca <__floatsisf+0x5e>
 5c0:	66 23       	and	r22, r22
 5c2:	71 f0       	breq	.+28     	; 0x5e0 <__floatsisf+0x74>
 5c4:	96 e8       	ldi	r25, 0x86	; 134
 5c6:	86 2f       	mov	r24, r22
 5c8:	70 e0       	ldi	r23, 0x00	; 0
 5ca:	60 e0       	ldi	r22, 0x00	; 0
 5cc:	2a f0       	brmi	.+10     	; 0x5d8 <__floatsisf+0x6c>
 5ce:	9a 95       	dec	r25
 5d0:	66 0f       	add	r22, r22
 5d2:	77 1f       	adc	r23, r23
 5d4:	88 1f       	adc	r24, r24
 5d6:	da f7       	brpl	.-10     	; 0x5ce <__floatsisf+0x62>
 5d8:	88 0f       	add	r24, r24
 5da:	96 95       	lsr	r25
 5dc:	87 95       	ror	r24
 5de:	97 f9       	bld	r25, 7
 5e0:	08 95       	ret

000005e2 <__fp_inf>:
 5e2:	97 f9       	bld	r25, 7
 5e4:	9f 67       	ori	r25, 0x7F	; 127
 5e6:	80 e8       	ldi	r24, 0x80	; 128
 5e8:	70 e0       	ldi	r23, 0x00	; 0
 5ea:	60 e0       	ldi	r22, 0x00	; 0
 5ec:	08 95       	ret

000005ee <__fp_nan>:
 5ee:	9f ef       	ldi	r25, 0xFF	; 255
 5f0:	80 ec       	ldi	r24, 0xC0	; 192
 5f2:	08 95       	ret

000005f4 <__fp_pscA>:
 5f4:	00 24       	eor	r0, r0
 5f6:	0a 94       	dec	r0
 5f8:	16 16       	cp	r1, r22
 5fa:	17 06       	cpc	r1, r23
 5fc:	18 06       	cpc	r1, r24
 5fe:	09 06       	cpc	r0, r25
 600:	08 95       	ret

00000602 <__fp_pscB>:
 602:	00 24       	eor	r0, r0
 604:	0a 94       	dec	r0
 606:	12 16       	cp	r1, r18
 608:	13 06       	cpc	r1, r19
 60a:	14 06       	cpc	r1, r20
 60c:	05 06       	cpc	r0, r21
 60e:	08 95       	ret

00000610 <__fp_round>:
 610:	09 2e       	mov	r0, r25
 612:	03 94       	inc	r0
 614:	00 0c       	add	r0, r0
 616:	11 f4       	brne	.+4      	; 0x61c <__fp_round+0xc>
 618:	88 23       	and	r24, r24
 61a:	52 f0       	brmi	.+20     	; 0x630 <__fp_round+0x20>
 61c:	bb 0f       	add	r27, r27
 61e:	40 f4       	brcc	.+16     	; 0x630 <__fp_round+0x20>
 620:	bf 2b       	or	r27, r31
 622:	11 f4       	brne	.+4      	; 0x628 <__fp_round+0x18>
 624:	60 ff       	sbrs	r22, 0
 626:	04 c0       	rjmp	.+8      	; 0x630 <__fp_round+0x20>
 628:	6f 5f       	subi	r22, 0xFF	; 255
 62a:	7f 4f       	sbci	r23, 0xFF	; 255
 62c:	8f 4f       	sbci	r24, 0xFF	; 255
 62e:	9f 4f       	sbci	r25, 0xFF	; 255
 630:	08 95       	ret

00000632 <__fp_split3>:
 632:	57 fd       	sbrc	r21, 7
 634:	90 58       	subi	r25, 0x80	; 128
 636:	44 0f       	add	r20, r20
 638:	55 1f       	adc	r21, r21
 63a:	59 f0       	breq	.+22     	; 0x652 <__fp_splitA+0x10>
 63c:	5f 3f       	cpi	r21, 0xFF	; 255
 63e:	71 f0       	breq	.+28     	; 0x65c <__fp_splitA+0x1a>
 640:	47 95       	ror	r20

00000642 <__fp_splitA>:
 642:	88 0f       	add	r24, r24
 644:	97 fb       	bst	r25, 7
 646:	99 1f       	adc	r25, r25
 648:	61 f0       	breq	.+24     	; 0x662 <__fp_splitA+0x20>
 64a:	9f 3f       	cpi	r25, 0xFF	; 255
 64c:	79 f0       	breq	.+30     	; 0x66c <__fp_splitA+0x2a>
 64e:	87 95       	ror	r24
 650:	08 95       	ret
 652:	12 16       	cp	r1, r18
 654:	13 06       	cpc	r1, r19
 656:	14 06       	cpc	r1, r20
 658:	55 1f       	adc	r21, r21
 65a:	f2 cf       	rjmp	.-28     	; 0x640 <__fp_split3+0xe>
 65c:	46 95       	lsr	r20
 65e:	f1 df       	rcall	.-30     	; 0x642 <__fp_splitA>
 660:	08 c0       	rjmp	.+16     	; 0x672 <__fp_splitA+0x30>
 662:	16 16       	cp	r1, r22
 664:	17 06       	cpc	r1, r23
 666:	18 06       	cpc	r1, r24
 668:	99 1f       	adc	r25, r25
 66a:	f1 cf       	rjmp	.-30     	; 0x64e <__fp_splitA+0xc>
 66c:	86 95       	lsr	r24
 66e:	71 05       	cpc	r23, r1
 670:	61 05       	cpc	r22, r1
 672:	08 94       	sec
 674:	08 95       	ret

00000676 <__fp_zero>:
 676:	e8 94       	clt

00000678 <__fp_szero>:
 678:	bb 27       	eor	r27, r27
 67a:	66 27       	eor	r22, r22
 67c:	77 27       	eor	r23, r23
 67e:	cb 01       	movw	r24, r22
 680:	97 f9       	bld	r25, 7
 682:	08 95       	ret

00000684 <__usmulhisi3>:
 684:	0e 94 49 03 	call	0x692	; 0x692 <__umulhisi3>

00000688 <__usmulhisi3_tail>:
 688:	b7 ff       	sbrs	r27, 7
 68a:	08 95       	ret
 68c:	82 1b       	sub	r24, r18
 68e:	93 0b       	sbc	r25, r19
 690:	08 95       	ret

00000692 <__umulhisi3>:
 692:	a2 9f       	mul	r26, r18
 694:	b0 01       	movw	r22, r0
 696:	b3 9f       	mul	r27, r19
 698:	c0 01       	movw	r24, r0
 69a:	a3 9f       	mul	r26, r19
 69c:	70 0d       	add	r23, r0
 69e:	81 1d       	adc	r24, r1
 6a0:	11 24       	eor	r1, r1
 6a2:	91 1d       	adc	r25, r1
 6a4:	b2 9f       	mul	r27, r18
 6a6:	70 0d       	add	r23, r0
 6a8:	81 1d       	adc	r24, r1
 6aa:	11 24       	eor	r1, r1
 6ac:	91 1d       	adc	r25, r1
 6ae:	08 95       	ret

000006b0 <dtostrf>:
 6b0:	ef 92       	push	r14
 6b2:	0f 93       	push	r16
 6b4:	1f 93       	push	r17
 6b6:	cf 93       	push	r28
 6b8:	df 93       	push	r29
 6ba:	e8 01       	movw	r28, r16
 6bc:	47 fd       	sbrc	r20, 7
 6be:	02 c0       	rjmp	.+4      	; 0x6c4 <dtostrf+0x14>
 6c0:	34 e0       	ldi	r19, 0x04	; 4
 6c2:	01 c0       	rjmp	.+2      	; 0x6c6 <dtostrf+0x16>
 6c4:	34 e1       	ldi	r19, 0x14	; 20
 6c6:	04 2e       	mov	r0, r20
 6c8:	00 0c       	add	r0, r0
 6ca:	55 0b       	sbc	r21, r21
 6cc:	57 ff       	sbrs	r21, 7
 6ce:	03 c0       	rjmp	.+6      	; 0x6d6 <dtostrf+0x26>
 6d0:	51 95       	neg	r21
 6d2:	41 95       	neg	r20
 6d4:	51 09       	sbc	r21, r1
 6d6:	e3 2e       	mov	r14, r19
 6d8:	02 2f       	mov	r16, r18
 6da:	24 2f       	mov	r18, r20
 6dc:	ae 01       	movw	r20, r28
 6de:	0e 94 78 03 	call	0x6f0	; 0x6f0 <dtoa_prf>
 6e2:	ce 01       	movw	r24, r28
 6e4:	df 91       	pop	r29
 6e6:	cf 91       	pop	r28
 6e8:	1f 91       	pop	r17
 6ea:	0f 91       	pop	r16
 6ec:	ef 90       	pop	r14
 6ee:	08 95       	ret

000006f0 <dtoa_prf>:
 6f0:	a9 e0       	ldi	r26, 0x09	; 9
 6f2:	b0 e0       	ldi	r27, 0x00	; 0
 6f4:	ee e7       	ldi	r30, 0x7E	; 126
 6f6:	f3 e0       	ldi	r31, 0x03	; 3
 6f8:	0c 94 b0 05 	jmp	0xb60	; 0xb60 <__prologue_saves__+0xc>
 6fc:	6a 01       	movw	r12, r20
 6fe:	12 2f       	mov	r17, r18
 700:	b0 2e       	mov	r11, r16
 702:	2b e3       	ldi	r18, 0x3B	; 59
 704:	20 17       	cp	r18, r16
 706:	20 f0       	brcs	.+8      	; 0x710 <dtoa_prf+0x20>
 708:	ff 24       	eor	r15, r15
 70a:	f3 94       	inc	r15
 70c:	f0 0e       	add	r15, r16
 70e:	02 c0       	rjmp	.+4      	; 0x714 <dtoa_prf+0x24>
 710:	2c e3       	ldi	r18, 0x3C	; 60
 712:	f2 2e       	mov	r15, r18
 714:	0f 2d       	mov	r16, r15
 716:	27 e0       	ldi	r18, 0x07	; 7
 718:	ae 01       	movw	r20, r28
 71a:	4f 5f       	subi	r20, 0xFF	; 255
 71c:	5f 4f       	sbci	r21, 0xFF	; 255
 71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__ftoa_engine>
 722:	bc 01       	movw	r22, r24
 724:	49 81       	ldd	r20, Y+1	; 0x01
 726:	84 2f       	mov	r24, r20
 728:	89 70       	andi	r24, 0x09	; 9
 72a:	81 30       	cpi	r24, 0x01	; 1
 72c:	31 f0       	breq	.+12     	; 0x73a <dtoa_prf+0x4a>
 72e:	e1 fc       	sbrc	r14, 1
 730:	06 c0       	rjmp	.+12     	; 0x73e <dtoa_prf+0x4e>
 732:	e0 fe       	sbrs	r14, 0
 734:	06 c0       	rjmp	.+12     	; 0x742 <dtoa_prf+0x52>
 736:	90 e2       	ldi	r25, 0x20	; 32
 738:	05 c0       	rjmp	.+10     	; 0x744 <dtoa_prf+0x54>
 73a:	9d e2       	ldi	r25, 0x2D	; 45
 73c:	03 c0       	rjmp	.+6      	; 0x744 <dtoa_prf+0x54>
 73e:	9b e2       	ldi	r25, 0x2B	; 43
 740:	01 c0       	rjmp	.+2      	; 0x744 <dtoa_prf+0x54>
 742:	90 e0       	ldi	r25, 0x00	; 0
 744:	5e 2d       	mov	r21, r14
 746:	50 71       	andi	r21, 0x10	; 16
 748:	43 ff       	sbrs	r20, 3
 74a:	3c c0       	rjmp	.+120    	; 0x7c4 <dtoa_prf+0xd4>
 74c:	91 11       	cpse	r25, r1
 74e:	02 c0       	rjmp	.+4      	; 0x754 <dtoa_prf+0x64>
 750:	83 e0       	ldi	r24, 0x03	; 3
 752:	01 c0       	rjmp	.+2      	; 0x756 <dtoa_prf+0x66>
 754:	84 e0       	ldi	r24, 0x04	; 4
 756:	81 17       	cp	r24, r17
 758:	18 f4       	brcc	.+6      	; 0x760 <dtoa_prf+0x70>
 75a:	21 2f       	mov	r18, r17
 75c:	28 1b       	sub	r18, r24
 75e:	01 c0       	rjmp	.+2      	; 0x762 <dtoa_prf+0x72>
 760:	20 e0       	ldi	r18, 0x00	; 0
 762:	51 11       	cpse	r21, r1
 764:	0b c0       	rjmp	.+22     	; 0x77c <dtoa_prf+0x8c>
 766:	f6 01       	movw	r30, r12
 768:	82 2f       	mov	r24, r18
 76a:	30 e2       	ldi	r19, 0x20	; 32
 76c:	88 23       	and	r24, r24
 76e:	19 f0       	breq	.+6      	; 0x776 <dtoa_prf+0x86>
 770:	31 93       	st	Z+, r19
 772:	81 50       	subi	r24, 0x01	; 1
 774:	fb cf       	rjmp	.-10     	; 0x76c <dtoa_prf+0x7c>
 776:	c2 0e       	add	r12, r18
 778:	d1 1c       	adc	r13, r1
 77a:	20 e0       	ldi	r18, 0x00	; 0
 77c:	99 23       	and	r25, r25
 77e:	29 f0       	breq	.+10     	; 0x78a <dtoa_prf+0x9a>
 780:	d6 01       	movw	r26, r12
 782:	9c 93       	st	X, r25
 784:	f6 01       	movw	r30, r12
 786:	31 96       	adiw	r30, 0x01	; 1
 788:	6f 01       	movw	r12, r30
 78a:	c6 01       	movw	r24, r12
 78c:	03 96       	adiw	r24, 0x03	; 3
 78e:	e2 fe       	sbrs	r14, 2
 790:	0a c0       	rjmp	.+20     	; 0x7a6 <dtoa_prf+0xb6>
 792:	3e e4       	ldi	r19, 0x4E	; 78
 794:	d6 01       	movw	r26, r12
 796:	3c 93       	st	X, r19
 798:	41 e4       	ldi	r20, 0x41	; 65
 79a:	11 96       	adiw	r26, 0x01	; 1
 79c:	4c 93       	st	X, r20
 79e:	11 97       	sbiw	r26, 0x01	; 1
 7a0:	12 96       	adiw	r26, 0x02	; 2
 7a2:	3c 93       	st	X, r19
 7a4:	06 c0       	rjmp	.+12     	; 0x7b2 <dtoa_prf+0xc2>
 7a6:	3e e6       	ldi	r19, 0x6E	; 110
 7a8:	f6 01       	movw	r30, r12
 7aa:	30 83       	st	Z, r19
 7ac:	41 e6       	ldi	r20, 0x61	; 97
 7ae:	41 83       	std	Z+1, r20	; 0x01
 7b0:	32 83       	std	Z+2, r19	; 0x02
 7b2:	fc 01       	movw	r30, r24
 7b4:	32 2f       	mov	r19, r18
 7b6:	40 e2       	ldi	r20, 0x20	; 32
 7b8:	33 23       	and	r19, r19
 7ba:	09 f4       	brne	.+2      	; 0x7be <dtoa_prf+0xce>
 7bc:	42 c0       	rjmp	.+132    	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 7be:	41 93       	st	Z+, r20
 7c0:	31 50       	subi	r19, 0x01	; 1
 7c2:	fa cf       	rjmp	.-12     	; 0x7b8 <dtoa_prf+0xc8>
 7c4:	42 ff       	sbrs	r20, 2
 7c6:	44 c0       	rjmp	.+136    	; 0x850 <__DATA_REGION_LENGTH__+0x50>
 7c8:	91 11       	cpse	r25, r1
 7ca:	02 c0       	rjmp	.+4      	; 0x7d0 <dtoa_prf+0xe0>
 7cc:	83 e0       	ldi	r24, 0x03	; 3
 7ce:	01 c0       	rjmp	.+2      	; 0x7d2 <dtoa_prf+0xe2>
 7d0:	84 e0       	ldi	r24, 0x04	; 4
 7d2:	81 17       	cp	r24, r17
 7d4:	18 f4       	brcc	.+6      	; 0x7dc <dtoa_prf+0xec>
 7d6:	21 2f       	mov	r18, r17
 7d8:	28 1b       	sub	r18, r24
 7da:	01 c0       	rjmp	.+2      	; 0x7de <dtoa_prf+0xee>
 7dc:	20 e0       	ldi	r18, 0x00	; 0
 7de:	51 11       	cpse	r21, r1
 7e0:	0b c0       	rjmp	.+22     	; 0x7f8 <dtoa_prf+0x108>
 7e2:	f6 01       	movw	r30, r12
 7e4:	82 2f       	mov	r24, r18
 7e6:	30 e2       	ldi	r19, 0x20	; 32
 7e8:	88 23       	and	r24, r24
 7ea:	19 f0       	breq	.+6      	; 0x7f2 <dtoa_prf+0x102>
 7ec:	31 93       	st	Z+, r19
 7ee:	81 50       	subi	r24, 0x01	; 1
 7f0:	fb cf       	rjmp	.-10     	; 0x7e8 <dtoa_prf+0xf8>
 7f2:	c2 0e       	add	r12, r18
 7f4:	d1 1c       	adc	r13, r1
 7f6:	20 e0       	ldi	r18, 0x00	; 0
 7f8:	99 23       	and	r25, r25
 7fa:	29 f0       	breq	.+10     	; 0x806 <__DATA_REGION_LENGTH__+0x6>
 7fc:	d6 01       	movw	r26, r12
 7fe:	9c 93       	st	X, r25
 800:	f6 01       	movw	r30, r12
 802:	31 96       	adiw	r30, 0x01	; 1
 804:	6f 01       	movw	r12, r30
 806:	c6 01       	movw	r24, r12
 808:	03 96       	adiw	r24, 0x03	; 3
 80a:	e2 fe       	sbrs	r14, 2
 80c:	0b c0       	rjmp	.+22     	; 0x824 <__DATA_REGION_LENGTH__+0x24>
 80e:	39 e4       	ldi	r19, 0x49	; 73
 810:	d6 01       	movw	r26, r12
 812:	3c 93       	st	X, r19
 814:	3e e4       	ldi	r19, 0x4E	; 78
 816:	11 96       	adiw	r26, 0x01	; 1
 818:	3c 93       	st	X, r19
 81a:	11 97       	sbiw	r26, 0x01	; 1
 81c:	36 e4       	ldi	r19, 0x46	; 70
 81e:	12 96       	adiw	r26, 0x02	; 2
 820:	3c 93       	st	X, r19
 822:	07 c0       	rjmp	.+14     	; 0x832 <__DATA_REGION_LENGTH__+0x32>
 824:	39 e6       	ldi	r19, 0x69	; 105
 826:	f6 01       	movw	r30, r12
 828:	30 83       	st	Z, r19
 82a:	3e e6       	ldi	r19, 0x6E	; 110
 82c:	31 83       	std	Z+1, r19	; 0x01
 82e:	36 e6       	ldi	r19, 0x66	; 102
 830:	32 83       	std	Z+2, r19	; 0x02
 832:	fc 01       	movw	r30, r24
 834:	32 2f       	mov	r19, r18
 836:	40 e2       	ldi	r20, 0x20	; 32
 838:	33 23       	and	r19, r19
 83a:	19 f0       	breq	.+6      	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 83c:	41 93       	st	Z+, r20
 83e:	31 50       	subi	r19, 0x01	; 1
 840:	fb cf       	rjmp	.-10     	; 0x838 <__DATA_REGION_LENGTH__+0x38>
 842:	fc 01       	movw	r30, r24
 844:	e2 0f       	add	r30, r18
 846:	f1 1d       	adc	r31, r1
 848:	10 82       	st	Z, r1
 84a:	8e ef       	ldi	r24, 0xFE	; 254
 84c:	9f ef       	ldi	r25, 0xFF	; 255
 84e:	a6 c0       	rjmp	.+332    	; 0x99c <__stack+0x9d>
 850:	21 e0       	ldi	r18, 0x01	; 1
 852:	30 e0       	ldi	r19, 0x00	; 0
 854:	91 11       	cpse	r25, r1
 856:	02 c0       	rjmp	.+4      	; 0x85c <__DATA_REGION_LENGTH__+0x5c>
 858:	20 e0       	ldi	r18, 0x00	; 0
 85a:	30 e0       	ldi	r19, 0x00	; 0
 85c:	16 16       	cp	r1, r22
 85e:	17 06       	cpc	r1, r23
 860:	1c f4       	brge	.+6      	; 0x868 <__DATA_REGION_LENGTH__+0x68>
 862:	fb 01       	movw	r30, r22
 864:	31 96       	adiw	r30, 0x01	; 1
 866:	02 c0       	rjmp	.+4      	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
 868:	e1 e0       	ldi	r30, 0x01	; 1
 86a:	f0 e0       	ldi	r31, 0x00	; 0
 86c:	2e 0f       	add	r18, r30
 86e:	3f 1f       	adc	r19, r31
 870:	bb 20       	and	r11, r11
 872:	21 f0       	breq	.+8      	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
 874:	eb 2d       	mov	r30, r11
 876:	f0 e0       	ldi	r31, 0x00	; 0
 878:	31 96       	adiw	r30, 0x01	; 1
 87a:	02 c0       	rjmp	.+4      	; 0x880 <__DATA_REGION_LENGTH__+0x80>
 87c:	e0 e0       	ldi	r30, 0x00	; 0
 87e:	f0 e0       	ldi	r31, 0x00	; 0
 880:	2e 0f       	add	r18, r30
 882:	3f 1f       	adc	r19, r31
 884:	e1 2f       	mov	r30, r17
 886:	f0 e0       	ldi	r31, 0x00	; 0
 888:	2e 17       	cp	r18, r30
 88a:	3f 07       	cpc	r19, r31
 88c:	1c f4       	brge	.+6      	; 0x894 <__DATA_REGION_LENGTH__+0x94>
 88e:	12 1b       	sub	r17, r18
 890:	21 2f       	mov	r18, r17
 892:	01 c0       	rjmp	.+2      	; 0x896 <__DATA_REGION_LENGTH__+0x96>
 894:	20 e0       	ldi	r18, 0x00	; 0
 896:	8e 2d       	mov	r24, r14
 898:	88 71       	andi	r24, 0x18	; 24
 89a:	59 f4       	brne	.+22     	; 0x8b2 <__DATA_REGION_LENGTH__+0xb2>
 89c:	f6 01       	movw	r30, r12
 89e:	82 2f       	mov	r24, r18
 8a0:	30 e2       	ldi	r19, 0x20	; 32
 8a2:	88 23       	and	r24, r24
 8a4:	19 f0       	breq	.+6      	; 0x8ac <__DATA_REGION_LENGTH__+0xac>
 8a6:	31 93       	st	Z+, r19
 8a8:	81 50       	subi	r24, 0x01	; 1
 8aa:	fb cf       	rjmp	.-10     	; 0x8a2 <__DATA_REGION_LENGTH__+0xa2>
 8ac:	c2 0e       	add	r12, r18
 8ae:	d1 1c       	adc	r13, r1
 8b0:	20 e0       	ldi	r18, 0x00	; 0
 8b2:	99 23       	and	r25, r25
 8b4:	29 f0       	breq	.+10     	; 0x8c0 <__DATA_REGION_LENGTH__+0xc0>
 8b6:	d6 01       	movw	r26, r12
 8b8:	9c 93       	st	X, r25
 8ba:	f6 01       	movw	r30, r12
 8bc:	31 96       	adiw	r30, 0x01	; 1
 8be:	6f 01       	movw	r12, r30
 8c0:	51 11       	cpse	r21, r1
 8c2:	0b c0       	rjmp	.+22     	; 0x8da <__DATA_REGION_LENGTH__+0xda>
 8c4:	f6 01       	movw	r30, r12
 8c6:	82 2f       	mov	r24, r18
 8c8:	90 e3       	ldi	r25, 0x30	; 48
 8ca:	88 23       	and	r24, r24
 8cc:	19 f0       	breq	.+6      	; 0x8d4 <__DATA_REGION_LENGTH__+0xd4>
 8ce:	91 93       	st	Z+, r25
 8d0:	81 50       	subi	r24, 0x01	; 1
 8d2:	fb cf       	rjmp	.-10     	; 0x8ca <__DATA_REGION_LENGTH__+0xca>
 8d4:	c2 0e       	add	r12, r18
 8d6:	d1 1c       	adc	r13, r1
 8d8:	20 e0       	ldi	r18, 0x00	; 0
 8da:	0f 2d       	mov	r16, r15
 8dc:	06 0f       	add	r16, r22
 8de:	9a 81       	ldd	r25, Y+2	; 0x02
 8e0:	34 2f       	mov	r19, r20
 8e2:	30 71       	andi	r19, 0x10	; 16
 8e4:	44 ff       	sbrs	r20, 4
 8e6:	03 c0       	rjmp	.+6      	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 8e8:	91 33       	cpi	r25, 0x31	; 49
 8ea:	09 f4       	brne	.+2      	; 0x8ee <__DATA_REGION_LENGTH__+0xee>
 8ec:	01 50       	subi	r16, 0x01	; 1
 8ee:	10 16       	cp	r1, r16
 8f0:	24 f4       	brge	.+8      	; 0x8fa <__DATA_REGION_LENGTH__+0xfa>
 8f2:	09 30       	cpi	r16, 0x09	; 9
 8f4:	18 f0       	brcs	.+6      	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
 8f6:	08 e0       	ldi	r16, 0x08	; 8
 8f8:	01 c0       	rjmp	.+2      	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
 8fa:	01 e0       	ldi	r16, 0x01	; 1
 8fc:	ab 01       	movw	r20, r22
 8fe:	77 ff       	sbrs	r23, 7
 900:	02 c0       	rjmp	.+4      	; 0x906 <__stack+0x7>
 902:	40 e0       	ldi	r20, 0x00	; 0
 904:	50 e0       	ldi	r21, 0x00	; 0
 906:	fb 01       	movw	r30, r22
 908:	e4 1b       	sub	r30, r20
 90a:	f5 0b       	sbc	r31, r21
 90c:	a1 e0       	ldi	r26, 0x01	; 1
 90e:	b0 e0       	ldi	r27, 0x00	; 0
 910:	ac 0f       	add	r26, r28
 912:	bd 1f       	adc	r27, r29
 914:	ea 0f       	add	r30, r26
 916:	fb 1f       	adc	r31, r27
 918:	8e e2       	ldi	r24, 0x2E	; 46
 91a:	a8 2e       	mov	r10, r24
 91c:	4b 01       	movw	r8, r22
 91e:	80 1a       	sub	r8, r16
 920:	91 08       	sbc	r9, r1
 922:	0b 2d       	mov	r16, r11
 924:	10 e0       	ldi	r17, 0x00	; 0
 926:	11 95       	neg	r17
 928:	01 95       	neg	r16
 92a:	11 09       	sbc	r17, r1
 92c:	4f 3f       	cpi	r20, 0xFF	; 255
 92e:	bf ef       	ldi	r27, 0xFF	; 255
 930:	5b 07       	cpc	r21, r27
 932:	21 f4       	brne	.+8      	; 0x93c <__stack+0x3d>
 934:	d6 01       	movw	r26, r12
 936:	ac 92       	st	X, r10
 938:	11 96       	adiw	r26, 0x01	; 1
 93a:	6d 01       	movw	r12, r26
 93c:	64 17       	cp	r22, r20
 93e:	75 07       	cpc	r23, r21
 940:	2c f0       	brlt	.+10     	; 0x94c <__stack+0x4d>
 942:	84 16       	cp	r8, r20
 944:	95 06       	cpc	r9, r21
 946:	14 f4       	brge	.+4      	; 0x94c <__stack+0x4d>
 948:	81 81       	ldd	r24, Z+1	; 0x01
 94a:	01 c0       	rjmp	.+2      	; 0x94e <__stack+0x4f>
 94c:	80 e3       	ldi	r24, 0x30	; 48
 94e:	41 50       	subi	r20, 0x01	; 1
 950:	51 09       	sbc	r21, r1
 952:	31 96       	adiw	r30, 0x01	; 1
 954:	d6 01       	movw	r26, r12
 956:	11 96       	adiw	r26, 0x01	; 1
 958:	7d 01       	movw	r14, r26
 95a:	40 17       	cp	r20, r16
 95c:	51 07       	cpc	r21, r17
 95e:	24 f0       	brlt	.+8      	; 0x968 <__stack+0x69>
 960:	d6 01       	movw	r26, r12
 962:	8c 93       	st	X, r24
 964:	67 01       	movw	r12, r14
 966:	e2 cf       	rjmp	.-60     	; 0x92c <__stack+0x2d>
 968:	64 17       	cp	r22, r20
 96a:	75 07       	cpc	r23, r21
 96c:	39 f4       	brne	.+14     	; 0x97c <__stack+0x7d>
 96e:	96 33       	cpi	r25, 0x36	; 54
 970:	20 f4       	brcc	.+8      	; 0x97a <__stack+0x7b>
 972:	95 33       	cpi	r25, 0x35	; 53
 974:	19 f4       	brne	.+6      	; 0x97c <__stack+0x7d>
 976:	31 11       	cpse	r19, r1
 978:	01 c0       	rjmp	.+2      	; 0x97c <__stack+0x7d>
 97a:	81 e3       	ldi	r24, 0x31	; 49
 97c:	f6 01       	movw	r30, r12
 97e:	80 83       	st	Z, r24
 980:	f7 01       	movw	r30, r14
 982:	82 2f       	mov	r24, r18
 984:	90 e2       	ldi	r25, 0x20	; 32
 986:	88 23       	and	r24, r24
 988:	19 f0       	breq	.+6      	; 0x990 <__stack+0x91>
 98a:	91 93       	st	Z+, r25
 98c:	81 50       	subi	r24, 0x01	; 1
 98e:	fb cf       	rjmp	.-10     	; 0x986 <__stack+0x87>
 990:	f7 01       	movw	r30, r14
 992:	e2 0f       	add	r30, r18
 994:	f1 1d       	adc	r31, r1
 996:	10 82       	st	Z, r1
 998:	80 e0       	ldi	r24, 0x00	; 0
 99a:	90 e0       	ldi	r25, 0x00	; 0
 99c:	29 96       	adiw	r28, 0x09	; 9
 99e:	ec e0       	ldi	r30, 0x0C	; 12
 9a0:	0c 94 cc 05 	jmp	0xb98	; 0xb98 <__epilogue_restores__+0xc>

000009a4 <__ftoa_engine>:
 9a4:	28 30       	cpi	r18, 0x08	; 8
 9a6:	08 f0       	brcs	.+2      	; 0x9aa <__ftoa_engine+0x6>
 9a8:	27 e0       	ldi	r18, 0x07	; 7
 9aa:	33 27       	eor	r19, r19
 9ac:	da 01       	movw	r26, r20
 9ae:	99 0f       	add	r25, r25
 9b0:	31 1d       	adc	r19, r1
 9b2:	87 fd       	sbrc	r24, 7
 9b4:	91 60       	ori	r25, 0x01	; 1
 9b6:	00 96       	adiw	r24, 0x00	; 0
 9b8:	61 05       	cpc	r22, r1
 9ba:	71 05       	cpc	r23, r1
 9bc:	39 f4       	brne	.+14     	; 0x9cc <__ftoa_engine+0x28>
 9be:	32 60       	ori	r19, 0x02	; 2
 9c0:	2e 5f       	subi	r18, 0xFE	; 254
 9c2:	3d 93       	st	X+, r19
 9c4:	30 e3       	ldi	r19, 0x30	; 48
 9c6:	2a 95       	dec	r18
 9c8:	e1 f7       	brne	.-8      	; 0x9c2 <__ftoa_engine+0x1e>
 9ca:	08 95       	ret
 9cc:	9f 3f       	cpi	r25, 0xFF	; 255
 9ce:	30 f0       	brcs	.+12     	; 0x9dc <__ftoa_engine+0x38>
 9d0:	80 38       	cpi	r24, 0x80	; 128
 9d2:	71 05       	cpc	r23, r1
 9d4:	61 05       	cpc	r22, r1
 9d6:	09 f0       	breq	.+2      	; 0x9da <__ftoa_engine+0x36>
 9d8:	3c 5f       	subi	r19, 0xFC	; 252
 9da:	3c 5f       	subi	r19, 0xFC	; 252
 9dc:	3d 93       	st	X+, r19
 9de:	91 30       	cpi	r25, 0x01	; 1
 9e0:	08 f0       	brcs	.+2      	; 0x9e4 <__ftoa_engine+0x40>
 9e2:	80 68       	ori	r24, 0x80	; 128
 9e4:	91 1d       	adc	r25, r1
 9e6:	df 93       	push	r29
 9e8:	cf 93       	push	r28
 9ea:	1f 93       	push	r17
 9ec:	0f 93       	push	r16
 9ee:	ff 92       	push	r15
 9f0:	ef 92       	push	r14
 9f2:	19 2f       	mov	r17, r25
 9f4:	98 7f       	andi	r25, 0xF8	; 248
 9f6:	96 95       	lsr	r25
 9f8:	e9 2f       	mov	r30, r25
 9fa:	96 95       	lsr	r25
 9fc:	96 95       	lsr	r25
 9fe:	e9 0f       	add	r30, r25
 a00:	ff 27       	eor	r31, r31
 a02:	ee 53       	subi	r30, 0x3E	; 62
 a04:	ff 4f       	sbci	r31, 0xFF	; 255
 a06:	99 27       	eor	r25, r25
 a08:	33 27       	eor	r19, r19
 a0a:	ee 24       	eor	r14, r14
 a0c:	ff 24       	eor	r15, r15
 a0e:	a7 01       	movw	r20, r14
 a10:	e7 01       	movw	r28, r14
 a12:	05 90       	lpm	r0, Z+
 a14:	08 94       	sec
 a16:	07 94       	ror	r0
 a18:	28 f4       	brcc	.+10     	; 0xa24 <__ftoa_engine+0x80>
 a1a:	36 0f       	add	r19, r22
 a1c:	e7 1e       	adc	r14, r23
 a1e:	f8 1e       	adc	r15, r24
 a20:	49 1f       	adc	r20, r25
 a22:	51 1d       	adc	r21, r1
 a24:	66 0f       	add	r22, r22
 a26:	77 1f       	adc	r23, r23
 a28:	88 1f       	adc	r24, r24
 a2a:	99 1f       	adc	r25, r25
 a2c:	06 94       	lsr	r0
 a2e:	a1 f7       	brne	.-24     	; 0xa18 <__ftoa_engine+0x74>
 a30:	05 90       	lpm	r0, Z+
 a32:	07 94       	ror	r0
 a34:	28 f4       	brcc	.+10     	; 0xa40 <__ftoa_engine+0x9c>
 a36:	e7 0e       	add	r14, r23
 a38:	f8 1e       	adc	r15, r24
 a3a:	49 1f       	adc	r20, r25
 a3c:	56 1f       	adc	r21, r22
 a3e:	c1 1d       	adc	r28, r1
 a40:	77 0f       	add	r23, r23
 a42:	88 1f       	adc	r24, r24
 a44:	99 1f       	adc	r25, r25
 a46:	66 1f       	adc	r22, r22
 a48:	06 94       	lsr	r0
 a4a:	a1 f7       	brne	.-24     	; 0xa34 <__ftoa_engine+0x90>
 a4c:	05 90       	lpm	r0, Z+
 a4e:	07 94       	ror	r0
 a50:	28 f4       	brcc	.+10     	; 0xa5c <__ftoa_engine+0xb8>
 a52:	f8 0e       	add	r15, r24
 a54:	49 1f       	adc	r20, r25
 a56:	56 1f       	adc	r21, r22
 a58:	c7 1f       	adc	r28, r23
 a5a:	d1 1d       	adc	r29, r1
 a5c:	88 0f       	add	r24, r24
 a5e:	99 1f       	adc	r25, r25
 a60:	66 1f       	adc	r22, r22
 a62:	77 1f       	adc	r23, r23
 a64:	06 94       	lsr	r0
 a66:	a1 f7       	brne	.-24     	; 0xa50 <__ftoa_engine+0xac>
 a68:	05 90       	lpm	r0, Z+
 a6a:	07 94       	ror	r0
 a6c:	20 f4       	brcc	.+8      	; 0xa76 <__ftoa_engine+0xd2>
 a6e:	49 0f       	add	r20, r25
 a70:	56 1f       	adc	r21, r22
 a72:	c7 1f       	adc	r28, r23
 a74:	d8 1f       	adc	r29, r24
 a76:	99 0f       	add	r25, r25
 a78:	66 1f       	adc	r22, r22
 a7a:	77 1f       	adc	r23, r23
 a7c:	88 1f       	adc	r24, r24
 a7e:	06 94       	lsr	r0
 a80:	a9 f7       	brne	.-22     	; 0xa6c <__ftoa_engine+0xc8>
 a82:	84 91       	lpm	r24, Z
 a84:	10 95       	com	r17
 a86:	17 70       	andi	r17, 0x07	; 7
 a88:	41 f0       	breq	.+16     	; 0xa9a <__ftoa_engine+0xf6>
 a8a:	d6 95       	lsr	r29
 a8c:	c7 95       	ror	r28
 a8e:	57 95       	ror	r21
 a90:	47 95       	ror	r20
 a92:	f7 94       	ror	r15
 a94:	e7 94       	ror	r14
 a96:	1a 95       	dec	r17
 a98:	c1 f7       	brne	.-16     	; 0xa8a <__ftoa_engine+0xe6>
 a9a:	e8 e6       	ldi	r30, 0x68	; 104
 a9c:	f0 e0       	ldi	r31, 0x00	; 0
 a9e:	68 94       	set
 aa0:	15 90       	lpm	r1, Z+
 aa2:	15 91       	lpm	r17, Z+
 aa4:	35 91       	lpm	r19, Z+
 aa6:	65 91       	lpm	r22, Z+
 aa8:	95 91       	lpm	r25, Z+
 aaa:	05 90       	lpm	r0, Z+
 aac:	7f e2       	ldi	r23, 0x2F	; 47
 aae:	73 95       	inc	r23
 ab0:	e1 18       	sub	r14, r1
 ab2:	f1 0a       	sbc	r15, r17
 ab4:	43 0b       	sbc	r20, r19
 ab6:	56 0b       	sbc	r21, r22
 ab8:	c9 0b       	sbc	r28, r25
 aba:	d0 09       	sbc	r29, r0
 abc:	c0 f7       	brcc	.-16     	; 0xaae <__ftoa_engine+0x10a>
 abe:	e1 0c       	add	r14, r1
 ac0:	f1 1e       	adc	r15, r17
 ac2:	43 1f       	adc	r20, r19
 ac4:	56 1f       	adc	r21, r22
 ac6:	c9 1f       	adc	r28, r25
 ac8:	d0 1d       	adc	r29, r0
 aca:	7e f4       	brtc	.+30     	; 0xaea <__ftoa_engine+0x146>
 acc:	70 33       	cpi	r23, 0x30	; 48
 ace:	11 f4       	brne	.+4      	; 0xad4 <__ftoa_engine+0x130>
 ad0:	8a 95       	dec	r24
 ad2:	e6 cf       	rjmp	.-52     	; 0xaa0 <__ftoa_engine+0xfc>
 ad4:	e8 94       	clt
 ad6:	01 50       	subi	r16, 0x01	; 1
 ad8:	30 f0       	brcs	.+12     	; 0xae6 <__ftoa_engine+0x142>
 ada:	08 0f       	add	r16, r24
 adc:	0a f4       	brpl	.+2      	; 0xae0 <__ftoa_engine+0x13c>
 ade:	00 27       	eor	r16, r16
 ae0:	02 17       	cp	r16, r18
 ae2:	08 f4       	brcc	.+2      	; 0xae6 <__ftoa_engine+0x142>
 ae4:	20 2f       	mov	r18, r16
 ae6:	23 95       	inc	r18
 ae8:	02 2f       	mov	r16, r18
 aea:	7a 33       	cpi	r23, 0x3A	; 58
 aec:	28 f0       	brcs	.+10     	; 0xaf8 <__ftoa_engine+0x154>
 aee:	79 e3       	ldi	r23, 0x39	; 57
 af0:	7d 93       	st	X+, r23
 af2:	2a 95       	dec	r18
 af4:	e9 f7       	brne	.-6      	; 0xaf0 <__ftoa_engine+0x14c>
 af6:	10 c0       	rjmp	.+32     	; 0xb18 <__ftoa_engine+0x174>
 af8:	7d 93       	st	X+, r23
 afa:	2a 95       	dec	r18
 afc:	89 f6       	brne	.-94     	; 0xaa0 <__ftoa_engine+0xfc>
 afe:	06 94       	lsr	r0
 b00:	97 95       	ror	r25
 b02:	67 95       	ror	r22
 b04:	37 95       	ror	r19
 b06:	17 95       	ror	r17
 b08:	17 94       	ror	r1
 b0a:	e1 18       	sub	r14, r1
 b0c:	f1 0a       	sbc	r15, r17
 b0e:	43 0b       	sbc	r20, r19
 b10:	56 0b       	sbc	r21, r22
 b12:	c9 0b       	sbc	r28, r25
 b14:	d0 09       	sbc	r29, r0
 b16:	98 f0       	brcs	.+38     	; 0xb3e <__ftoa_engine+0x19a>
 b18:	23 95       	inc	r18
 b1a:	7e 91       	ld	r23, -X
 b1c:	73 95       	inc	r23
 b1e:	7a 33       	cpi	r23, 0x3A	; 58
 b20:	08 f0       	brcs	.+2      	; 0xb24 <__ftoa_engine+0x180>
 b22:	70 e3       	ldi	r23, 0x30	; 48
 b24:	7c 93       	st	X, r23
 b26:	20 13       	cpse	r18, r16
 b28:	b8 f7       	brcc	.-18     	; 0xb18 <__ftoa_engine+0x174>
 b2a:	7e 91       	ld	r23, -X
 b2c:	70 61       	ori	r23, 0x10	; 16
 b2e:	7d 93       	st	X+, r23
 b30:	30 f0       	brcs	.+12     	; 0xb3e <__ftoa_engine+0x19a>
 b32:	83 95       	inc	r24
 b34:	71 e3       	ldi	r23, 0x31	; 49
 b36:	7d 93       	st	X+, r23
 b38:	70 e3       	ldi	r23, 0x30	; 48
 b3a:	2a 95       	dec	r18
 b3c:	e1 f7       	brne	.-8      	; 0xb36 <__ftoa_engine+0x192>
 b3e:	11 24       	eor	r1, r1
 b40:	ef 90       	pop	r14
 b42:	ff 90       	pop	r15
 b44:	0f 91       	pop	r16
 b46:	1f 91       	pop	r17
 b48:	cf 91       	pop	r28
 b4a:	df 91       	pop	r29
 b4c:	99 27       	eor	r25, r25
 b4e:	87 fd       	sbrc	r24, 7
 b50:	90 95       	com	r25
 b52:	08 95       	ret

00000b54 <__prologue_saves__>:
 b54:	2f 92       	push	r2
 b56:	3f 92       	push	r3
 b58:	4f 92       	push	r4
 b5a:	5f 92       	push	r5
 b5c:	6f 92       	push	r6
 b5e:	7f 92       	push	r7
 b60:	8f 92       	push	r8
 b62:	9f 92       	push	r9
 b64:	af 92       	push	r10
 b66:	bf 92       	push	r11
 b68:	cf 92       	push	r12
 b6a:	df 92       	push	r13
 b6c:	ef 92       	push	r14
 b6e:	ff 92       	push	r15
 b70:	0f 93       	push	r16
 b72:	1f 93       	push	r17
 b74:	cf 93       	push	r28
 b76:	df 93       	push	r29
 b78:	cd b7       	in	r28, 0x3d	; 61
 b7a:	de b7       	in	r29, 0x3e	; 62
 b7c:	ca 1b       	sub	r28, r26
 b7e:	db 0b       	sbc	r29, r27
 b80:	0f b6       	in	r0, 0x3f	; 63
 b82:	f8 94       	cli
 b84:	de bf       	out	0x3e, r29	; 62
 b86:	0f be       	out	0x3f, r0	; 63
 b88:	cd bf       	out	0x3d, r28	; 61
 b8a:	09 94       	ijmp

00000b8c <__epilogue_restores__>:
 b8c:	2a 88       	ldd	r2, Y+18	; 0x12
 b8e:	39 88       	ldd	r3, Y+17	; 0x11
 b90:	48 88       	ldd	r4, Y+16	; 0x10
 b92:	5f 84       	ldd	r5, Y+15	; 0x0f
 b94:	6e 84       	ldd	r6, Y+14	; 0x0e
 b96:	7d 84       	ldd	r7, Y+13	; 0x0d
 b98:	8c 84       	ldd	r8, Y+12	; 0x0c
 b9a:	9b 84       	ldd	r9, Y+11	; 0x0b
 b9c:	aa 84       	ldd	r10, Y+10	; 0x0a
 b9e:	b9 84       	ldd	r11, Y+9	; 0x09
 ba0:	c8 84       	ldd	r12, Y+8	; 0x08
 ba2:	df 80       	ldd	r13, Y+7	; 0x07
 ba4:	ee 80       	ldd	r14, Y+6	; 0x06
 ba6:	fd 80       	ldd	r15, Y+5	; 0x05
 ba8:	0c 81       	ldd	r16, Y+4	; 0x04
 baa:	1b 81       	ldd	r17, Y+3	; 0x03
 bac:	aa 81       	ldd	r26, Y+2	; 0x02
 bae:	b9 81       	ldd	r27, Y+1	; 0x01
 bb0:	ce 0f       	add	r28, r30
 bb2:	d1 1d       	adc	r29, r1
 bb4:	0f b6       	in	r0, 0x3f	; 63
 bb6:	f8 94       	cli
 bb8:	de bf       	out	0x3e, r29	; 62
 bba:	0f be       	out	0x3f, r0	; 63
 bbc:	cd bf       	out	0x3d, r28	; 61
 bbe:	ed 01       	movw	r28, r26
 bc0:	08 95       	ret

00000bc2 <_exit>:
 bc2:	f8 94       	cli

00000bc4 <__stop_program>:
 bc4:	ff cf       	rjmp	.-2      	; 0xbc4 <__stop_program>
