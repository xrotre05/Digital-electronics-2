
Echo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00000b90  00000c24  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b90  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000047  00800108  00800108  00000c2c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c2c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c5c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000c9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e84  00000000  00000000  00000d64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ea  00000000  00000000  00001be8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000067f  00000000  00000000  000024d2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001bc  00000000  00000000  00002b54  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000056c  00000000  00000000  00002d10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000004b8  00000000  00000000  0000327c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00003734  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
   4:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
   8:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
   c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  10:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  14:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  18:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  1c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  20:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  24:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  28:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  2c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  30:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  34:	0c 94 91 01 	jmp	0x322	; 0x322 <__vector_13>
  38:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  3c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  40:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  44:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  48:	0c 94 a8 01 	jmp	0x350	; 0x350 <__vector_18>
  4c:	0c 94 d6 01 	jmp	0x3ac	; 0x3ac <__vector_19>
  50:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  54:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  58:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  5c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  60:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  64:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 40       	sbci	r16, 0x00	; 0
  6a:	7a 10       	cpse	r7, r10
  6c:	f3 5a       	subi	r31, 0xA3	; 163
  6e:	00 a0       	ldd	r0, Z+32	; 0x20
  70:	72 4e       	sbci	r23, 0xE2	; 226
  72:	18 09       	sbc	r17, r8
  74:	00 10       	cpse	r0, r0
  76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__ftoa_engine+0x54>
  78:	e8 00       	.word	0x00e8	; ????
  7a:	00 e8       	ldi	r16, 0x80	; 128
  7c:	76 48       	sbci	r23, 0x86	; 134
  7e:	17 00       	.word	0x0017	; ????
  80:	00 e4       	ldi	r16, 0x40	; 64
  82:	0b 54       	subi	r16, 0x4B	; 75
  84:	02 00       	.word	0x0002	; ????
  86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
  88:	9a 3b       	cpi	r25, 0xBA	; 186
  8a:	00 00       	nop
  8c:	00 e1       	ldi	r16, 0x10	; 16
  8e:	f5 05       	cpc	r31, r5
  90:	00 00       	nop
  92:	80 96       	adiw	r24, 0x20	; 32
  94:	98 00       	.word	0x0098	; ????
  96:	00 00       	nop
  98:	40 42       	sbci	r20, 0x20	; 32
  9a:	0f 00       	.word	0x000f	; ????
  9c:	00 00       	nop
  9e:	a0 86       	std	Z+8, r10	; 0x08
  a0:	01 00       	.word	0x0001	; ????
  a2:	00 00       	nop
  a4:	10 27       	eor	r17, r16
  a6:	00 00       	nop
  a8:	00 00       	nop
  aa:	e8 03       	fmulsu	r22, r16
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	64 00       	.word	0x0064	; ????
  b2:	00 00       	nop
  b4:	00 00       	nop
  b6:	0a 00       	.word	0x000a	; ????
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	01 00       	.word	0x0001	; ????
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	2c 76       	andi	r18, 0x6C	; 108
  c4:	d8 88       	ldd	r13, Y+16	; 0x10
  c6:	dc 67       	ori	r29, 0x7C	; 124
  c8:	4f 08       	sbc	r4, r15
  ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
  cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
  ce:	ae 59       	subi	r26, 0x9E	; 158
  d0:	e1 b1       	in	r30, 0x01	; 1
  d2:	b7 96       	adiw	r30, 0x27	; 39
  d4:	e5 e3       	ldi	r30, 0x35	; 53
  d6:	e4 53       	subi	r30, 0x34	; 52
  d8:	c6 3a       	cpi	r28, 0xA6	; 166
  da:	e6 51       	subi	r30, 0x16	; 22
  dc:	99 76       	andi	r25, 0x69	; 105
  de:	96 e8       	ldi	r25, 0x86	; 134
  e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <dtostrf+0x34>
  e2:	84 26       	eor	r8, r20
  e4:	eb 89       	ldd	r30, Y+19	; 0x13
  e6:	8c 9b       	sbis	0x11, 4	; 17
  e8:	62 ed       	ldi	r22, 0xD2	; 210
  ea:	40 7c       	andi	r20, 0xC0	; 192
  ec:	6f fc       	.word	0xfc6f	; ????
  ee:	ef bc       	out	0x2f, r14	; 47
  f0:	9c 9f       	mul	r25, r28
  f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
  f4:	ba a5       	ldd	r27, Y+42	; 0x2a
  f6:	6f a5       	ldd	r22, Y+47	; 0x2f
  f8:	f4 90       	lpm	r15, Z
  fa:	05 5a       	subi	r16, 0xA5	; 165
  fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
  fe:	5c 93       	st	X, r21
 100:	6b 6c       	ori	r22, 0xCB	; 203
 102:	f9 67       	ori	r31, 0x79	; 121
 104:	6d c1       	rjmp	.+730    	; 0x3e0 <__vector_19+0x34>
 106:	1b fc       	.word	0xfc1b	; ????
 108:	e0 e4       	ldi	r30, 0x40	; 64
 10a:	0d 47       	sbci	r16, 0x7D	; 125
 10c:	fe f5       	brtc	.+126    	; 0x18c <.do_clear_bss_loop>
 10e:	20 e6       	ldi	r18, 0x60	; 96
 110:	b5 00       	.word	0x00b5	; ????
 112:	d0 ed       	ldi	r29, 0xD0	; 208
 114:	90 2e       	mov	r9, r16
 116:	03 00       	.word	0x0003	; ????
 118:	94 35       	cpi	r25, 0x54	; 84
 11a:	77 05       	cpc	r23, r7
 11c:	00 80       	ld	r0, Z
 11e:	84 1e       	adc	r8, r20
 120:	08 00       	.word	0x0008	; ????
 122:	00 20       	and	r0, r0
 124:	4e 0a       	sbc	r4, r30
 126:	00 00       	nop
 128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
 12a:	0c 33       	cpi	r16, 0x3C	; 60
 12c:	33 33       	cpi	r19, 0x33	; 51
 12e:	33 0f       	add	r19, r19
 130:	98 6e       	ori	r25, 0xE8	; 232
 132:	12 83       	std	Z+2, r17	; 0x02
 134:	11 41       	sbci	r17, 0x11	; 17
 136:	ef 8d       	ldd	r30, Y+31	; 0x1f
 138:	21 14       	cp	r2, r1
 13a:	89 3b       	cpi	r24, 0xB9	; 185
 13c:	e6 55       	subi	r30, 0x56	; 86
 13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
 140:	fe e6       	ldi	r31, 0x6E	; 110
 142:	db 18       	sub	r13, r11
 144:	d1 84       	ldd	r13, Z+9	; 0x09
 146:	4b 38       	cpi	r20, 0x8B	; 139
 148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
 14a:	7c 1d       	adc	r23, r12
 14c:	90 1d       	adc	r25, r0
 14e:	a4 bb       	out	0x14, r26	; 20
 150:	e4 24       	eor	r14, r4
 152:	20 32       	cpi	r18, 0x20	; 32
 154:	84 72       	andi	r24, 0x24	; 36
 156:	5e 22       	and	r5, r30
 158:	81 00       	.word	0x0081	; ????
 15a:	c9 f1       	breq	.+114    	; 0x1ce <GPIO_config_input_pullup+0x16>
 15c:	24 ec       	ldi	r18, 0xC4	; 196
 15e:	a1 e5       	ldi	r26, 0x51	; 81
 160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
 162:	11 24       	eor	r1, r1
 164:	1f be       	out	0x3f, r1	; 63
 166:	cf ef       	ldi	r28, 0xFF	; 255
 168:	d8 e0       	ldi	r29, 0x08	; 8
 16a:	de bf       	out	0x3e, r29	; 62
 16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
 16e:	11 e0       	ldi	r17, 0x01	; 1
 170:	a0 e0       	ldi	r26, 0x00	; 0
 172:	b1 e0       	ldi	r27, 0x01	; 1
 174:	e0 e9       	ldi	r30, 0x90	; 144
 176:	fb e0       	ldi	r31, 0x0B	; 11
 178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
 17a:	05 90       	lpm	r0, Z+
 17c:	0d 92       	st	X+, r0
 17e:	a8 30       	cpi	r26, 0x08	; 8
 180:	b1 07       	cpc	r27, r17
 182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
 184:	21 e0       	ldi	r18, 0x01	; 1
 186:	a8 e0       	ldi	r26, 0x08	; 8
 188:	b1 e0       	ldi	r27, 0x01	; 1
 18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
 18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
 18e:	af 34       	cpi	r26, 0x4F	; 79
 190:	b2 07       	cpc	r27, r18
 192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>
 194:	0e 94 06 01 	call	0x20c	; 0x20c <main>
 198:	0c 94 c6 05 	jmp	0xb8c	; 0xb8c <_exit>

0000019c <__bad_interrupt>:
 19c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a0 <GPIO_config_output>:

void GPIO_config_input_nopull(volatile uint8_t *reg_name, uint8_t pin_num)
{
    *reg_name = *reg_name & ~(1<<pin_num);  // Data Direction Register
    reg_name++;                     // Change pointer to Data Register
    *reg_name = *reg_name & ~(1<<pin_num);   // Data Register
 1a0:	fc 01       	movw	r30, r24
 1a2:	40 81       	ld	r20, Z
 1a4:	21 e0       	ldi	r18, 0x01	; 1
 1a6:	30 e0       	ldi	r19, 0x00	; 0
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <GPIO_config_output+0xe>
 1aa:	22 0f       	add	r18, r18
 1ac:	33 1f       	adc	r19, r19
 1ae:	6a 95       	dec	r22
 1b0:	e2 f7       	brpl	.-8      	; 0x1aa <GPIO_config_output+0xa>
 1b2:	24 2b       	or	r18, r20
 1b4:	20 83       	st	Z, r18
 1b6:	08 95       	ret

000001b8 <GPIO_config_input_pullup>:
 * Input:    reg_name - Address of Data Direction Register, such as &DDRB
 *           pin_num - Pin designation in the interval 0 to 7
 * Returns:  none
 **********************************************************************/
void GPIO_config_input_pullup(volatile uint8_t *reg_name, uint8_t pin_num)
{
 1b8:	fc 01       	movw	r30, r24
    *reg_name = *reg_name & ~(1<<pin_num);  // Data Direction Register
 1ba:	80 81       	ld	r24, Z
 1bc:	21 e0       	ldi	r18, 0x01	; 1
 1be:	30 e0       	ldi	r19, 0x00	; 0
 1c0:	02 c0       	rjmp	.+4      	; 0x1c6 <GPIO_config_input_pullup+0xe>
 1c2:	22 0f       	add	r18, r18
 1c4:	33 1f       	adc	r19, r19
 1c6:	6a 95       	dec	r22
 1c8:	e2 f7       	brpl	.-8      	; 0x1c2 <GPIO_config_input_pullup+0xa>
 1ca:	92 2f       	mov	r25, r18
 1cc:	90 95       	com	r25
 1ce:	89 23       	and	r24, r25
 1d0:	80 83       	st	Z, r24
    reg_name++;                     // Change pointer to Data Register
    *reg_name = *reg_name | (1<<pin_num);   // Data Register
 1d2:	81 81       	ldd	r24, Z+1	; 0x01
 1d4:	28 2b       	or	r18, r24
 1d6:	21 83       	std	Z+1, r18	; 0x01
 1d8:	08 95       	ret

000001da <GPIO_write_low>:
 * Input:    reg_name - Address of Port Register, such as &PORTB
 *           pin_num - Pin designation in the interval 0 to 7
 * Returns:  none
 **********************************************************************/
void GPIO_write_low(volatile uint8_t *reg_name, uint8_t pin_num)
{
 1da:	fc 01       	movw	r30, r24
    *reg_name = *reg_name & ~(1<<pin_num);
 1dc:	90 81       	ld	r25, Z
 1de:	21 e0       	ldi	r18, 0x01	; 1
 1e0:	30 e0       	ldi	r19, 0x00	; 0
 1e2:	02 c0       	rjmp	.+4      	; 0x1e8 <GPIO_write_low+0xe>
 1e4:	22 0f       	add	r18, r18
 1e6:	33 1f       	adc	r19, r19
 1e8:	6a 95       	dec	r22
 1ea:	e2 f7       	brpl	.-8      	; 0x1e4 <GPIO_write_low+0xa>
 1ec:	20 95       	com	r18
 1ee:	29 23       	and	r18, r25
 1f0:	20 83       	st	Z, r18
 1f2:	08 95       	ret

000001f4 <GPIO_write_high>:
 * Function: GPIO_write_high()
 **********************************************************************/
void GPIO_write_high(volatile uint8_t *reg_name, uint8_t pin_num)

{
    *reg_name = *reg_name |(1<<pin_num);
 1f4:	fc 01       	movw	r30, r24
 1f6:	40 81       	ld	r20, Z
 1f8:	21 e0       	ldi	r18, 0x01	; 1
 1fa:	30 e0       	ldi	r19, 0x00	; 0
 1fc:	02 c0       	rjmp	.+4      	; 0x202 <GPIO_write_high+0xe>
 1fe:	22 0f       	add	r18, r18
 200:	33 1f       	adc	r19, r19
 202:	6a 95       	dec	r22
 204:	e2 f7       	brpl	.-8      	; 0x1fe <GPIO_write_high+0xa>
 206:	24 2b       	or	r18, r20
 208:	20 83       	st	Z, r18
 20a:	08 95       	ret

0000020c <main>:
#include <string.h>

int TimerOverflow = 0;

int main(void)
{
 20c:	cf 93       	push	r28
 20e:	df 93       	push	r29
 210:	cd b7       	in	r28, 0x3d	; 61
 212:	de b7       	in	r29, 0x3e	; 62
 214:	2a 97       	sbiw	r28, 0x0a	; 10
 216:	0f b6       	in	r0, 0x3f	; 63
 218:	f8 94       	cli
 21a:	de bf       	out	0x3e, r29	; 62
 21c:	0f be       	out	0x3f, r0	; 63
 21e:	cd bf       	out	0x3d, r28	; 61
     
	 //input output setup
     
     GPIO_config_output(&DDRB, TRIGGER);
 220:	65 e0       	ldi	r22, 0x05	; 5
 222:	84 e2       	ldi	r24, 0x24	; 36
 224:	90 e0       	ldi	r25, 0x00	; 0
 226:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <GPIO_config_output>
     GPIO_write_low(&PORTB, TRIGGER);
 22a:	65 e0       	ldi	r22, 0x05	; 5
 22c:	85 e2       	ldi	r24, 0x25	; 37
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	0e 94 ed 00 	call	0x1da	; 0x1da <GPIO_write_low>
     //PORTB = PORTB & ~(1<<LED_INT);
     //DDRB = DDRB | (1<<LED_INT);

	GPIO_config_input_pullup(&DDRD,ECHO);
 234:	66 e0       	ldi	r22, 0x06	; 6
 236:	8a e2       	ldi	r24, 0x2A	; 42
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <GPIO_config_input_pullup>
	//PORTD = 0xFF;		/* Turn on Pull-up */

    // Initialize UART to asynchronous, 8N1, 9600
    uart_init(UART_BAUD_SELECT(9600, F_CPU));
 23e:	87 e6       	ldi	r24, 0x67	; 103
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	0e 94 00 02 	call	0x400	; 0x400 <uart_init>

    // Configure 16-bit Timer/Counter1
	// we need to use Timer/Counter1 because it is the only one which has input capture mode
    
	// Enables interrupts by setting the global interrupt mask
	sei();	
 246:	78 94       	sei
	//Enable overflow interrupt
	TIM1_overflow_interrupt_enable();
 248:	ef e6       	ldi	r30, 0x6F	; 111
 24a:	f0 e0       	ldi	r31, 0x00	; 0
 24c:	80 81       	ld	r24, Z
 24e:	81 60       	ori	r24, 0x01	; 1
 250:	80 83       	st	Z, r24
    // Infinite loop
    while (1)
    {
        /* Empty loop. All subsequent operations are performed exclusively 
         * inside interrupt service routines ISRs */
		GPIO_write_high(&PORTB, TRIGGER);
 252:	65 e0       	ldi	r22, 0x05	; 5
 254:	85 e2       	ldi	r24, 0x25	; 37
 256:	90 e0       	ldi	r25, 0x00	; 0
 258:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <GPIO_write_high>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 25c:	25 e3       	ldi	r18, 0x35	; 53
 25e:	2a 95       	dec	r18
 260:	f1 f7       	brne	.-4      	; 0x25e <main+0x52>
 262:	00 00       	nop
		_delay_us(10);
		GPIO_write_low(&PORTB, TRIGGER);
 264:	65 e0       	ldi	r22, 0x05	; 5
 266:	85 e2       	ldi	r24, 0x25	; 37
 268:	90 e0       	ldi	r25, 0x00	; 0
 26a:	0e 94 ed 00 	call	0x1da	; 0x1da <GPIO_write_low>
		
		TCNT1 = 0;				/* Clear Timer counter */	
 26e:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 272:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
			//TCCR1B = 0x41;		/* Capture on rising edge, No prescaler*/
		TIM1_overflow_4ms();
 276:	e1 e8       	ldi	r30, 0x81	; 129
 278:	f0 e0       	ldi	r31, 0x00	; 0
 27a:	80 81       	ld	r24, Z
 27c:	89 7f       	andi	r24, 0xF9	; 249
 27e:	80 83       	st	Z, r24
 280:	80 81       	ld	r24, Z
 282:	81 60       	ori	r24, 0x01	; 1
 284:	80 83       	st	Z, r24
		TCCR1B = 1<<ICES1;
 286:	80 e4       	ldi	r24, 0x40	; 64
 288:	80 83       	st	Z, r24
		//
		
		TIFR1 = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 28a:	80 e2       	ldi	r24, 0x20	; 32
 28c:	86 bb       	out	0x16, r24	; 22
		TIFR1 = 1<<TOV1;	/* Clear Timer Overflow flag */
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	86 bb       	out	0x16, r24	; 22
		
		/*Calculate width of Echo by Input Capture (ICP) */
		
		while ((TIFR1 & (1 << ICF1)) == 0);/* Wait for rising edge */
 292:	b5 9b       	sbis	0x16, 5	; 22
 294:	fe cf       	rjmp	.-4      	; 0x292 <main+0x86>
		TCNT1 = 0;			/* Clear Timer counter */
 296:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 29a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
			//TCCR1B = 0x01;		/* Capture on falling edge, No prescaler */
		TCCR1B = 0<<ICES1;
 29e:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
		//
		TIFR1 = 1<<ICF1;	/* Clear ICP flag (Input Capture flag) */
 2a2:	80 e2       	ldi	r24, 0x20	; 32
 2a4:	86 bb       	out	0x16, r24	; 22
		TIFR1 = 1<<TOV1;	/* Clear Timer Overflow flag */
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	86 bb       	out	0x16, r24	; 22
		TimerOverflow = 0;/* Clear Timer overflow count */
 2aa:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <__data_end+0x1>
 2ae:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__data_end>

		while ((TIFR1 & (1 << ICF1)) == 0);/* Wait for falling edge */
 2b2:	b5 9b       	sbis	0x16, 5	; 22
 2b4:	fe cf       	rjmp	.-4      	; 0x2b2 <main+0xa6>
		count = ICR1 + (65535 * TimerOverflow);	/* Take count */
 2b6:	60 91 86 00 	lds	r22, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
 2ba:	70 91 87 00 	lds	r23, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
 2be:	80 e0       	ldi	r24, 0x00	; 0
 2c0:	90 e0       	ldi	r25, 0x00	; 0
		/* 8MHz Timer freq, sound speed =343 m/s */
		distance = (double)count / 466.47;
 2c2:	0e 94 b1 02 	call	0x562	; 0x562 <__floatsisf>
 2c6:	29 e2       	ldi	r18, 0x29	; 41
 2c8:	3c e3       	ldi	r19, 0x3C	; 60
 2ca:	49 ee       	ldi	r20, 0xE9	; 233
 2cc:	53 e4       	ldi	r21, 0x43	; 67
 2ce:	0e 94 3d 02 	call	0x47a	; 0x47a <__divsf3>

		dtostrf(distance, 2, 2, string);/* distance to string */
 2d2:	9e 01       	movw	r18, r28
 2d4:	2f 5f       	subi	r18, 0xFF	; 255
 2d6:	3f 4f       	sbci	r19, 0xFF	; 255
 2d8:	79 01       	movw	r14, r18
 2da:	89 01       	movw	r16, r18
 2dc:	22 e0       	ldi	r18, 0x02	; 2
 2de:	42 e0       	ldi	r20, 0x02	; 2
 2e0:	0e 94 3d 03 	call	0x67a	; 0x67a <dtostrf>
		strcat(string, " cm   ");	/* Concat unit i.e.cm */
 2e4:	d7 01       	movw	r26, r14
 2e6:	0d 90       	ld	r0, X+
 2e8:	00 20       	and	r0, r0
 2ea:	e9 f7       	brne	.-6      	; 0x2e6 <main+0xda>
 2ec:	11 97       	sbiw	r26, 0x01	; 1
 2ee:	87 e0       	ldi	r24, 0x07	; 7
 2f0:	e0 e0       	ldi	r30, 0x00	; 0
 2f2:	f1 e0       	ldi	r31, 0x01	; 1
 2f4:	01 90       	ld	r0, Z+
 2f6:	0d 92       	st	X+, r0
 2f8:	8a 95       	dec	r24
 2fa:	e1 f7       	brne	.-8      	; 0x2f4 <main+0xe8>
		
		/* Print distance */
		uart_puts(string);
 2fc:	c7 01       	movw	r24, r14
 2fe:	0e 94 30 02 	call	0x460	; 0x460 <uart_puts>
		uart_putc('\n');
 302:	8a e0       	ldi	r24, 0x0A	; 10
 304:	0e 94 1b 02 	call	0x436	; 0x436 <uart_putc>
		uart_putc('\r');
 308:	8d e0       	ldi	r24, 0x0D	; 13
 30a:	0e 94 1b 02 	call	0x436	; 0x436 <uart_putc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 30e:	3f ef       	ldi	r19, 0xFF	; 255
 310:	83 ec       	ldi	r24, 0xC3	; 195
 312:	99 e0       	ldi	r25, 0x09	; 9
 314:	31 50       	subi	r19, 0x01	; 1
 316:	80 40       	sbci	r24, 0x00	; 0
 318:	90 40       	sbci	r25, 0x00	; 0
 31a:	e1 f7       	brne	.-8      	; 0x314 <main+0x108>
 31c:	00 c0       	rjmp	.+0      	; 0x31e <main+0x112>
 31e:	00 00       	nop
 320:	98 cf       	rjmp	.-208    	; 0x252 <main+0x46>

00000322 <__vector_13>:
    // Will never reach this
    return 0;
}

ISR(TIMER1_OVF_vect)
{
 322:	1f 92       	push	r1
 324:	0f 92       	push	r0
 326:	0f b6       	in	r0, 0x3f	; 63
 328:	0f 92       	push	r0
 32a:	11 24       	eor	r1, r1
 32c:	8f 93       	push	r24
 32e:	9f 93       	push	r25
	
	TimerOverflow++;	/* Increment Timer Overflow count */			
 330:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
 334:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x1>
 338:	01 96       	adiw	r24, 0x01	; 1
 33a:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__data_end+0x1>
 33e:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end>

 342:	9f 91       	pop	r25
 344:	8f 91       	pop	r24
 346:	0f 90       	pop	r0
 348:	0f be       	out	0x3f, r0	; 63
 34a:	0f 90       	pop	r0
 34c:	1f 90       	pop	r1
 34e:	18 95       	reti

00000350 <__vector_18>:
    /* store buffer index */
    UART_RxTail = tmptail;

    UART_LastRxError = 0;
    return (lastRxError << 8) + data;
}/* uart_getc */
 350:	1f 92       	push	r1
 352:	0f 92       	push	r0
 354:	0f b6       	in	r0, 0x3f	; 63
 356:	0f 92       	push	r0
 358:	11 24       	eor	r1, r1
 35a:	2f 93       	push	r18
 35c:	8f 93       	push	r24
 35e:	9f 93       	push	r25
 360:	ef 93       	push	r30
 362:	ff 93       	push	r31
 364:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 368:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 36c:	8c 71       	andi	r24, 0x1C	; 28
 36e:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <UART_RxHead>
 372:	ef 5f       	subi	r30, 0xFF	; 255
 374:	ef 71       	andi	r30, 0x1F	; 31
 376:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <UART_RxTail>
 37a:	e9 17       	cp	r30, r25
 37c:	39 f0       	breq	.+14     	; 0x38c <__vector_18+0x3c>
 37e:	e0 93 0c 01 	sts	0x010C, r30	; 0x80010c <UART_RxHead>
 382:	f0 e0       	ldi	r31, 0x00	; 0
 384:	e1 5f       	subi	r30, 0xF1	; 241
 386:	fe 4f       	sbci	r31, 0xFE	; 254
 388:	20 83       	st	Z, r18
 38a:	01 c0       	rjmp	.+2      	; 0x38e <__vector_18+0x3e>
 38c:	82 e0       	ldi	r24, 0x02	; 2
 38e:	90 91 0a 01 	lds	r25, 0x010A	; 0x80010a <UART_LastRxError>
 392:	89 2b       	or	r24, r25
 394:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <UART_LastRxError>
 398:	ff 91       	pop	r31
 39a:	ef 91       	pop	r30
 39c:	9f 91       	pop	r25
 39e:	8f 91       	pop	r24
 3a0:	2f 91       	pop	r18
 3a2:	0f 90       	pop	r0
 3a4:	0f be       	out	0x3f, r0	; 63
 3a6:	0f 90       	pop	r0
 3a8:	1f 90       	pop	r1
 3aa:	18 95       	reti

000003ac <__vector_19>:
 3ac:	1f 92       	push	r1
 3ae:	0f 92       	push	r0
 3b0:	0f b6       	in	r0, 0x3f	; 63
 3b2:	0f 92       	push	r0
 3b4:	11 24       	eor	r1, r1
 3b6:	8f 93       	push	r24
 3b8:	9f 93       	push	r25
 3ba:	ef 93       	push	r30
 3bc:	ff 93       	push	r31
 3be:	90 91 0e 01 	lds	r25, 0x010E	; 0x80010e <UART_TxHead>
 3c2:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <UART_TxTail>
 3c6:	98 17       	cp	r25, r24
 3c8:	69 f0       	breq	.+26     	; 0x3e4 <__vector_19+0x38>
 3ca:	e0 91 0d 01 	lds	r30, 0x010D	; 0x80010d <UART_TxTail>
 3ce:	ef 5f       	subi	r30, 0xFF	; 255
 3d0:	ef 71       	andi	r30, 0x1F	; 31
 3d2:	e0 93 0d 01 	sts	0x010D, r30	; 0x80010d <UART_TxTail>
 3d6:	f0 e0       	ldi	r31, 0x00	; 0
 3d8:	e1 5d       	subi	r30, 0xD1	; 209
 3da:	fe 4f       	sbci	r31, 0xFE	; 254
 3dc:	80 81       	ld	r24, Z
 3de:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 3e2:	05 c0       	rjmp	.+10     	; 0x3ee <__vector_19+0x42>
 3e4:	e1 ec       	ldi	r30, 0xC1	; 193
 3e6:	f0 e0       	ldi	r31, 0x00	; 0
 3e8:	80 81       	ld	r24, Z
 3ea:	8f 7d       	andi	r24, 0xDF	; 223
 3ec:	80 83       	st	Z, r24
 3ee:	ff 91       	pop	r31
 3f0:	ef 91       	pop	r30
 3f2:	9f 91       	pop	r25
 3f4:	8f 91       	pop	r24
 3f6:	0f 90       	pop	r0
 3f8:	0f be       	out	0x3f, r0	; 63
 3fa:	0f 90       	pop	r0
 3fc:	1f 90       	pop	r1
 3fe:	18 95       	reti

00000400 <uart_init>:
 400:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <UART_TxHead>
 404:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <UART_TxTail>
 408:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <UART_RxHead>
 40c:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <UART_RxTail>
 410:	28 2f       	mov	r18, r24
 412:	39 2f       	mov	r19, r25
 414:	33 23       	and	r19, r19
 416:	1c f4       	brge	.+6      	; 0x41e <uart_init+0x1e>
 418:	22 e0       	ldi	r18, 0x02	; 2
 41a:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 41e:	90 78       	andi	r25, 0x80	; 128
 420:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
 424:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
 428:	88 e9       	ldi	r24, 0x98	; 152
 42a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
 42e:	86 e0       	ldi	r24, 0x06	; 6
 430:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
 434:	08 95       	ret

00000436 <uart_putc>:
void uart_putc(unsigned char data)
{
    unsigned char tmphead;


    tmphead = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
 436:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <UART_TxHead>
 43a:	2f 5f       	subi	r18, 0xFF	; 255
 43c:	2f 71       	andi	r18, 0x1F	; 31

    while (tmphead == UART_TxTail)
 43e:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <UART_TxTail>
 442:	29 17       	cp	r18, r25
 444:	e1 f3       	breq	.-8      	; 0x43e <uart_putc+0x8>
    {
        ;/* wait for free space in buffer */
    }

    UART_TxBuf[tmphead] = data;
 446:	e2 2f       	mov	r30, r18
 448:	f0 e0       	ldi	r31, 0x00	; 0
 44a:	e1 5d       	subi	r30, 0xD1	; 209
 44c:	fe 4f       	sbci	r31, 0xFE	; 254
 44e:	80 83       	st	Z, r24
    UART_TxHead         = tmphead;
 450:	20 93 0e 01 	sts	0x010E, r18	; 0x80010e <UART_TxHead>

    /* enable UDRE interrupt */
    UART0_CONTROL |= _BV(UART0_UDRIE);
 454:	e1 ec       	ldi	r30, 0xC1	; 193
 456:	f0 e0       	ldi	r31, 0x00	; 0
 458:	80 81       	ld	r24, Z
 45a:	80 62       	ori	r24, 0x20	; 32
 45c:	80 83       	st	Z, r24
 45e:	08 95       	ret

00000460 <uart_puts>:
 * Purpose:  transmit string to UART
 * Input:    string to be transmitted
 * Returns:  none
 **************************************************************************/
void uart_puts(const char *s)
{
 460:	cf 93       	push	r28
 462:	df 93       	push	r29
 464:	ec 01       	movw	r28, r24
    while (*s)
 466:	03 c0       	rjmp	.+6      	; 0x46e <uart_puts+0xe>
        uart_putc(*s++);
 468:	21 96       	adiw	r28, 0x01	; 1
 46a:	0e 94 1b 02 	call	0x436	; 0x436 <uart_putc>
 * Input:    string to be transmitted
 * Returns:  none
 **************************************************************************/
void uart_puts(const char *s)
{
    while (*s)
 46e:	88 81       	ld	r24, Y
 470:	81 11       	cpse	r24, r1
 472:	fa cf       	rjmp	.-12     	; 0x468 <uart_puts+0x8>
        uart_putc(*s++);
}/* uart_puts */
 474:	df 91       	pop	r29
 476:	cf 91       	pop	r28
 478:	08 95       	ret

0000047a <__divsf3>:
 47a:	0e 94 51 02 	call	0x4a2	; 0x4a2 <__divsf3x>
 47e:	0c 94 03 03 	jmp	0x606	; 0x606 <__fp_round>
 482:	0e 94 fc 02 	call	0x5f8	; 0x5f8 <__fp_pscB>
 486:	58 f0       	brcs	.+22     	; 0x49e <__divsf3+0x24>
 488:	0e 94 f5 02 	call	0x5ea	; 0x5ea <__fp_pscA>
 48c:	40 f0       	brcs	.+16     	; 0x49e <__divsf3+0x24>
 48e:	29 f4       	brne	.+10     	; 0x49a <__divsf3+0x20>
 490:	5f 3f       	cpi	r21, 0xFF	; 255
 492:	29 f0       	breq	.+10     	; 0x49e <__divsf3+0x24>
 494:	0c 94 ec 02 	jmp	0x5d8	; 0x5d8 <__fp_inf>
 498:	51 11       	cpse	r21, r1
 49a:	0c 94 37 03 	jmp	0x66e	; 0x66e <__fp_szero>
 49e:	0c 94 f2 02 	jmp	0x5e4	; 0x5e4 <__fp_nan>

000004a2 <__divsf3x>:
 4a2:	0e 94 14 03 	call	0x628	; 0x628 <__fp_split3>
 4a6:	68 f3       	brcs	.-38     	; 0x482 <__divsf3+0x8>

000004a8 <__divsf3_pse>:
 4a8:	99 23       	and	r25, r25
 4aa:	b1 f3       	breq	.-20     	; 0x498 <__divsf3+0x1e>
 4ac:	55 23       	and	r21, r21
 4ae:	91 f3       	breq	.-28     	; 0x494 <__divsf3+0x1a>
 4b0:	95 1b       	sub	r25, r21
 4b2:	55 0b       	sbc	r21, r21
 4b4:	bb 27       	eor	r27, r27
 4b6:	aa 27       	eor	r26, r26
 4b8:	62 17       	cp	r22, r18
 4ba:	73 07       	cpc	r23, r19
 4bc:	84 07       	cpc	r24, r20
 4be:	38 f0       	brcs	.+14     	; 0x4ce <__divsf3_pse+0x26>
 4c0:	9f 5f       	subi	r25, 0xFF	; 255
 4c2:	5f 4f       	sbci	r21, 0xFF	; 255
 4c4:	22 0f       	add	r18, r18
 4c6:	33 1f       	adc	r19, r19
 4c8:	44 1f       	adc	r20, r20
 4ca:	aa 1f       	adc	r26, r26
 4cc:	a9 f3       	breq	.-22     	; 0x4b8 <__divsf3_pse+0x10>
 4ce:	35 d0       	rcall	.+106    	; 0x53a <__divsf3_pse+0x92>
 4d0:	0e 2e       	mov	r0, r30
 4d2:	3a f0       	brmi	.+14     	; 0x4e2 <__divsf3_pse+0x3a>
 4d4:	e0 e8       	ldi	r30, 0x80	; 128
 4d6:	32 d0       	rcall	.+100    	; 0x53c <__divsf3_pse+0x94>
 4d8:	91 50       	subi	r25, 0x01	; 1
 4da:	50 40       	sbci	r21, 0x00	; 0
 4dc:	e6 95       	lsr	r30
 4de:	00 1c       	adc	r0, r0
 4e0:	ca f7       	brpl	.-14     	; 0x4d4 <__divsf3_pse+0x2c>
 4e2:	2b d0       	rcall	.+86     	; 0x53a <__divsf3_pse+0x92>
 4e4:	fe 2f       	mov	r31, r30
 4e6:	29 d0       	rcall	.+82     	; 0x53a <__divsf3_pse+0x92>
 4e8:	66 0f       	add	r22, r22
 4ea:	77 1f       	adc	r23, r23
 4ec:	88 1f       	adc	r24, r24
 4ee:	bb 1f       	adc	r27, r27
 4f0:	26 17       	cp	r18, r22
 4f2:	37 07       	cpc	r19, r23
 4f4:	48 07       	cpc	r20, r24
 4f6:	ab 07       	cpc	r26, r27
 4f8:	b0 e8       	ldi	r27, 0x80	; 128
 4fa:	09 f0       	breq	.+2      	; 0x4fe <__divsf3_pse+0x56>
 4fc:	bb 0b       	sbc	r27, r27
 4fe:	80 2d       	mov	r24, r0
 500:	bf 01       	movw	r22, r30
 502:	ff 27       	eor	r31, r31
 504:	93 58       	subi	r25, 0x83	; 131
 506:	5f 4f       	sbci	r21, 0xFF	; 255
 508:	3a f0       	brmi	.+14     	; 0x518 <__divsf3_pse+0x70>
 50a:	9e 3f       	cpi	r25, 0xFE	; 254
 50c:	51 05       	cpc	r21, r1
 50e:	78 f0       	brcs	.+30     	; 0x52e <__divsf3_pse+0x86>
 510:	0c 94 ec 02 	jmp	0x5d8	; 0x5d8 <__fp_inf>
 514:	0c 94 37 03 	jmp	0x66e	; 0x66e <__fp_szero>
 518:	5f 3f       	cpi	r21, 0xFF	; 255
 51a:	e4 f3       	brlt	.-8      	; 0x514 <__divsf3_pse+0x6c>
 51c:	98 3e       	cpi	r25, 0xE8	; 232
 51e:	d4 f3       	brlt	.-12     	; 0x514 <__divsf3_pse+0x6c>
 520:	86 95       	lsr	r24
 522:	77 95       	ror	r23
 524:	67 95       	ror	r22
 526:	b7 95       	ror	r27
 528:	f7 95       	ror	r31
 52a:	9f 5f       	subi	r25, 0xFF	; 255
 52c:	c9 f7       	brne	.-14     	; 0x520 <__divsf3_pse+0x78>
 52e:	88 0f       	add	r24, r24
 530:	91 1d       	adc	r25, r1
 532:	96 95       	lsr	r25
 534:	87 95       	ror	r24
 536:	97 f9       	bld	r25, 7
 538:	08 95       	ret
 53a:	e1 e0       	ldi	r30, 0x01	; 1
 53c:	66 0f       	add	r22, r22
 53e:	77 1f       	adc	r23, r23
 540:	88 1f       	adc	r24, r24
 542:	bb 1f       	adc	r27, r27
 544:	62 17       	cp	r22, r18
 546:	73 07       	cpc	r23, r19
 548:	84 07       	cpc	r24, r20
 54a:	ba 07       	cpc	r27, r26
 54c:	20 f0       	brcs	.+8      	; 0x556 <__divsf3_pse+0xae>
 54e:	62 1b       	sub	r22, r18
 550:	73 0b       	sbc	r23, r19
 552:	84 0b       	sbc	r24, r20
 554:	ba 0b       	sbc	r27, r26
 556:	ee 1f       	adc	r30, r30
 558:	88 f7       	brcc	.-30     	; 0x53c <__divsf3_pse+0x94>
 55a:	e0 95       	com	r30
 55c:	08 95       	ret

0000055e <__floatunsisf>:
 55e:	e8 94       	clt
 560:	09 c0       	rjmp	.+18     	; 0x574 <__floatsisf+0x12>

00000562 <__floatsisf>:
 562:	97 fb       	bst	r25, 7
 564:	3e f4       	brtc	.+14     	; 0x574 <__floatsisf+0x12>
 566:	90 95       	com	r25
 568:	80 95       	com	r24
 56a:	70 95       	com	r23
 56c:	61 95       	neg	r22
 56e:	7f 4f       	sbci	r23, 0xFF	; 255
 570:	8f 4f       	sbci	r24, 0xFF	; 255
 572:	9f 4f       	sbci	r25, 0xFF	; 255
 574:	99 23       	and	r25, r25
 576:	a9 f0       	breq	.+42     	; 0x5a2 <__floatsisf+0x40>
 578:	f9 2f       	mov	r31, r25
 57a:	96 e9       	ldi	r25, 0x96	; 150
 57c:	bb 27       	eor	r27, r27
 57e:	93 95       	inc	r25
 580:	f6 95       	lsr	r31
 582:	87 95       	ror	r24
 584:	77 95       	ror	r23
 586:	67 95       	ror	r22
 588:	b7 95       	ror	r27
 58a:	f1 11       	cpse	r31, r1
 58c:	f8 cf       	rjmp	.-16     	; 0x57e <__floatsisf+0x1c>
 58e:	fa f4       	brpl	.+62     	; 0x5ce <__floatsisf+0x6c>
 590:	bb 0f       	add	r27, r27
 592:	11 f4       	brne	.+4      	; 0x598 <__floatsisf+0x36>
 594:	60 ff       	sbrs	r22, 0
 596:	1b c0       	rjmp	.+54     	; 0x5ce <__floatsisf+0x6c>
 598:	6f 5f       	subi	r22, 0xFF	; 255
 59a:	7f 4f       	sbci	r23, 0xFF	; 255
 59c:	8f 4f       	sbci	r24, 0xFF	; 255
 59e:	9f 4f       	sbci	r25, 0xFF	; 255
 5a0:	16 c0       	rjmp	.+44     	; 0x5ce <__floatsisf+0x6c>
 5a2:	88 23       	and	r24, r24
 5a4:	11 f0       	breq	.+4      	; 0x5aa <__floatsisf+0x48>
 5a6:	96 e9       	ldi	r25, 0x96	; 150
 5a8:	11 c0       	rjmp	.+34     	; 0x5cc <__floatsisf+0x6a>
 5aa:	77 23       	and	r23, r23
 5ac:	21 f0       	breq	.+8      	; 0x5b6 <__floatsisf+0x54>
 5ae:	9e e8       	ldi	r25, 0x8E	; 142
 5b0:	87 2f       	mov	r24, r23
 5b2:	76 2f       	mov	r23, r22
 5b4:	05 c0       	rjmp	.+10     	; 0x5c0 <__floatsisf+0x5e>
 5b6:	66 23       	and	r22, r22
 5b8:	71 f0       	breq	.+28     	; 0x5d6 <__floatsisf+0x74>
 5ba:	96 e8       	ldi	r25, 0x86	; 134
 5bc:	86 2f       	mov	r24, r22
 5be:	70 e0       	ldi	r23, 0x00	; 0
 5c0:	60 e0       	ldi	r22, 0x00	; 0
 5c2:	2a f0       	brmi	.+10     	; 0x5ce <__floatsisf+0x6c>
 5c4:	9a 95       	dec	r25
 5c6:	66 0f       	add	r22, r22
 5c8:	77 1f       	adc	r23, r23
 5ca:	88 1f       	adc	r24, r24
 5cc:	da f7       	brpl	.-10     	; 0x5c4 <__floatsisf+0x62>
 5ce:	88 0f       	add	r24, r24
 5d0:	96 95       	lsr	r25
 5d2:	87 95       	ror	r24
 5d4:	97 f9       	bld	r25, 7
 5d6:	08 95       	ret

000005d8 <__fp_inf>:
 5d8:	97 f9       	bld	r25, 7
 5da:	9f 67       	ori	r25, 0x7F	; 127
 5dc:	80 e8       	ldi	r24, 0x80	; 128
 5de:	70 e0       	ldi	r23, 0x00	; 0
 5e0:	60 e0       	ldi	r22, 0x00	; 0
 5e2:	08 95       	ret

000005e4 <__fp_nan>:
 5e4:	9f ef       	ldi	r25, 0xFF	; 255
 5e6:	80 ec       	ldi	r24, 0xC0	; 192
 5e8:	08 95       	ret

000005ea <__fp_pscA>:
 5ea:	00 24       	eor	r0, r0
 5ec:	0a 94       	dec	r0
 5ee:	16 16       	cp	r1, r22
 5f0:	17 06       	cpc	r1, r23
 5f2:	18 06       	cpc	r1, r24
 5f4:	09 06       	cpc	r0, r25
 5f6:	08 95       	ret

000005f8 <__fp_pscB>:
 5f8:	00 24       	eor	r0, r0
 5fa:	0a 94       	dec	r0
 5fc:	12 16       	cp	r1, r18
 5fe:	13 06       	cpc	r1, r19
 600:	14 06       	cpc	r1, r20
 602:	05 06       	cpc	r0, r21
 604:	08 95       	ret

00000606 <__fp_round>:
 606:	09 2e       	mov	r0, r25
 608:	03 94       	inc	r0
 60a:	00 0c       	add	r0, r0
 60c:	11 f4       	brne	.+4      	; 0x612 <__fp_round+0xc>
 60e:	88 23       	and	r24, r24
 610:	52 f0       	brmi	.+20     	; 0x626 <__fp_round+0x20>
 612:	bb 0f       	add	r27, r27
 614:	40 f4       	brcc	.+16     	; 0x626 <__fp_round+0x20>
 616:	bf 2b       	or	r27, r31
 618:	11 f4       	brne	.+4      	; 0x61e <__fp_round+0x18>
 61a:	60 ff       	sbrs	r22, 0
 61c:	04 c0       	rjmp	.+8      	; 0x626 <__fp_round+0x20>
 61e:	6f 5f       	subi	r22, 0xFF	; 255
 620:	7f 4f       	sbci	r23, 0xFF	; 255
 622:	8f 4f       	sbci	r24, 0xFF	; 255
 624:	9f 4f       	sbci	r25, 0xFF	; 255
 626:	08 95       	ret

00000628 <__fp_split3>:
 628:	57 fd       	sbrc	r21, 7
 62a:	90 58       	subi	r25, 0x80	; 128
 62c:	44 0f       	add	r20, r20
 62e:	55 1f       	adc	r21, r21
 630:	59 f0       	breq	.+22     	; 0x648 <__fp_splitA+0x10>
 632:	5f 3f       	cpi	r21, 0xFF	; 255
 634:	71 f0       	breq	.+28     	; 0x652 <__fp_splitA+0x1a>
 636:	47 95       	ror	r20

00000638 <__fp_splitA>:
 638:	88 0f       	add	r24, r24
 63a:	97 fb       	bst	r25, 7
 63c:	99 1f       	adc	r25, r25
 63e:	61 f0       	breq	.+24     	; 0x658 <__fp_splitA+0x20>
 640:	9f 3f       	cpi	r25, 0xFF	; 255
 642:	79 f0       	breq	.+30     	; 0x662 <__fp_splitA+0x2a>
 644:	87 95       	ror	r24
 646:	08 95       	ret
 648:	12 16       	cp	r1, r18
 64a:	13 06       	cpc	r1, r19
 64c:	14 06       	cpc	r1, r20
 64e:	55 1f       	adc	r21, r21
 650:	f2 cf       	rjmp	.-28     	; 0x636 <__fp_split3+0xe>
 652:	46 95       	lsr	r20
 654:	f1 df       	rcall	.-30     	; 0x638 <__fp_splitA>
 656:	08 c0       	rjmp	.+16     	; 0x668 <__fp_splitA+0x30>
 658:	16 16       	cp	r1, r22
 65a:	17 06       	cpc	r1, r23
 65c:	18 06       	cpc	r1, r24
 65e:	99 1f       	adc	r25, r25
 660:	f1 cf       	rjmp	.-30     	; 0x644 <__fp_splitA+0xc>
 662:	86 95       	lsr	r24
 664:	71 05       	cpc	r23, r1
 666:	61 05       	cpc	r22, r1
 668:	08 94       	sec
 66a:	08 95       	ret

0000066c <__fp_zero>:
 66c:	e8 94       	clt

0000066e <__fp_szero>:
 66e:	bb 27       	eor	r27, r27
 670:	66 27       	eor	r22, r22
 672:	77 27       	eor	r23, r23
 674:	cb 01       	movw	r24, r22
 676:	97 f9       	bld	r25, 7
 678:	08 95       	ret

0000067a <dtostrf>:
 67a:	ef 92       	push	r14
 67c:	0f 93       	push	r16
 67e:	1f 93       	push	r17
 680:	cf 93       	push	r28
 682:	df 93       	push	r29
 684:	e8 01       	movw	r28, r16
 686:	47 fd       	sbrc	r20, 7
 688:	02 c0       	rjmp	.+4      	; 0x68e <dtostrf+0x14>
 68a:	34 e0       	ldi	r19, 0x04	; 4
 68c:	01 c0       	rjmp	.+2      	; 0x690 <dtostrf+0x16>
 68e:	34 e1       	ldi	r19, 0x14	; 20
 690:	04 2e       	mov	r0, r20
 692:	00 0c       	add	r0, r0
 694:	55 0b       	sbc	r21, r21
 696:	57 ff       	sbrs	r21, 7
 698:	03 c0       	rjmp	.+6      	; 0x6a0 <dtostrf+0x26>
 69a:	51 95       	neg	r21
 69c:	41 95       	neg	r20
 69e:	51 09       	sbc	r21, r1
 6a0:	e3 2e       	mov	r14, r19
 6a2:	02 2f       	mov	r16, r18
 6a4:	24 2f       	mov	r18, r20
 6a6:	ae 01       	movw	r20, r28
 6a8:	0e 94 5d 03 	call	0x6ba	; 0x6ba <dtoa_prf>
 6ac:	ce 01       	movw	r24, r28
 6ae:	df 91       	pop	r29
 6b0:	cf 91       	pop	r28
 6b2:	1f 91       	pop	r17
 6b4:	0f 91       	pop	r16
 6b6:	ef 90       	pop	r14
 6b8:	08 95       	ret

000006ba <dtoa_prf>:
 6ba:	a9 e0       	ldi	r26, 0x09	; 9
 6bc:	b0 e0       	ldi	r27, 0x00	; 0
 6be:	e3 e6       	ldi	r30, 0x63	; 99
 6c0:	f3 e0       	ldi	r31, 0x03	; 3
 6c2:	0c 94 95 05 	jmp	0xb2a	; 0xb2a <__prologue_saves__+0xc>
 6c6:	6a 01       	movw	r12, r20
 6c8:	12 2f       	mov	r17, r18
 6ca:	b0 2e       	mov	r11, r16
 6cc:	2b e3       	ldi	r18, 0x3B	; 59
 6ce:	20 17       	cp	r18, r16
 6d0:	20 f0       	brcs	.+8      	; 0x6da <dtoa_prf+0x20>
 6d2:	ff 24       	eor	r15, r15
 6d4:	f3 94       	inc	r15
 6d6:	f0 0e       	add	r15, r16
 6d8:	02 c0       	rjmp	.+4      	; 0x6de <dtoa_prf+0x24>
 6da:	2c e3       	ldi	r18, 0x3C	; 60
 6dc:	f2 2e       	mov	r15, r18
 6de:	0f 2d       	mov	r16, r15
 6e0:	27 e0       	ldi	r18, 0x07	; 7
 6e2:	ae 01       	movw	r20, r28
 6e4:	4f 5f       	subi	r20, 0xFF	; 255
 6e6:	5f 4f       	sbci	r21, 0xFF	; 255
 6e8:	0e 94 b7 04 	call	0x96e	; 0x96e <__ftoa_engine>
 6ec:	bc 01       	movw	r22, r24
 6ee:	49 81       	ldd	r20, Y+1	; 0x01
 6f0:	84 2f       	mov	r24, r20
 6f2:	89 70       	andi	r24, 0x09	; 9
 6f4:	81 30       	cpi	r24, 0x01	; 1
 6f6:	31 f0       	breq	.+12     	; 0x704 <dtoa_prf+0x4a>
 6f8:	e1 fc       	sbrc	r14, 1
 6fa:	06 c0       	rjmp	.+12     	; 0x708 <dtoa_prf+0x4e>
 6fc:	e0 fe       	sbrs	r14, 0
 6fe:	06 c0       	rjmp	.+12     	; 0x70c <dtoa_prf+0x52>
 700:	90 e2       	ldi	r25, 0x20	; 32
 702:	05 c0       	rjmp	.+10     	; 0x70e <dtoa_prf+0x54>
 704:	9d e2       	ldi	r25, 0x2D	; 45
 706:	03 c0       	rjmp	.+6      	; 0x70e <dtoa_prf+0x54>
 708:	9b e2       	ldi	r25, 0x2B	; 43
 70a:	01 c0       	rjmp	.+2      	; 0x70e <dtoa_prf+0x54>
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	5e 2d       	mov	r21, r14
 710:	50 71       	andi	r21, 0x10	; 16
 712:	43 ff       	sbrs	r20, 3
 714:	3c c0       	rjmp	.+120    	; 0x78e <dtoa_prf+0xd4>
 716:	91 11       	cpse	r25, r1
 718:	02 c0       	rjmp	.+4      	; 0x71e <dtoa_prf+0x64>
 71a:	83 e0       	ldi	r24, 0x03	; 3
 71c:	01 c0       	rjmp	.+2      	; 0x720 <dtoa_prf+0x66>
 71e:	84 e0       	ldi	r24, 0x04	; 4
 720:	81 17       	cp	r24, r17
 722:	18 f4       	brcc	.+6      	; 0x72a <dtoa_prf+0x70>
 724:	21 2f       	mov	r18, r17
 726:	28 1b       	sub	r18, r24
 728:	01 c0       	rjmp	.+2      	; 0x72c <dtoa_prf+0x72>
 72a:	20 e0       	ldi	r18, 0x00	; 0
 72c:	51 11       	cpse	r21, r1
 72e:	0b c0       	rjmp	.+22     	; 0x746 <dtoa_prf+0x8c>
 730:	f6 01       	movw	r30, r12
 732:	82 2f       	mov	r24, r18
 734:	30 e2       	ldi	r19, 0x20	; 32
 736:	88 23       	and	r24, r24
 738:	19 f0       	breq	.+6      	; 0x740 <dtoa_prf+0x86>
 73a:	31 93       	st	Z+, r19
 73c:	81 50       	subi	r24, 0x01	; 1
 73e:	fb cf       	rjmp	.-10     	; 0x736 <dtoa_prf+0x7c>
 740:	c2 0e       	add	r12, r18
 742:	d1 1c       	adc	r13, r1
 744:	20 e0       	ldi	r18, 0x00	; 0
 746:	99 23       	and	r25, r25
 748:	29 f0       	breq	.+10     	; 0x754 <dtoa_prf+0x9a>
 74a:	d6 01       	movw	r26, r12
 74c:	9c 93       	st	X, r25
 74e:	f6 01       	movw	r30, r12
 750:	31 96       	adiw	r30, 0x01	; 1
 752:	6f 01       	movw	r12, r30
 754:	c6 01       	movw	r24, r12
 756:	03 96       	adiw	r24, 0x03	; 3
 758:	e2 fe       	sbrs	r14, 2
 75a:	0a c0       	rjmp	.+20     	; 0x770 <dtoa_prf+0xb6>
 75c:	3e e4       	ldi	r19, 0x4E	; 78
 75e:	d6 01       	movw	r26, r12
 760:	3c 93       	st	X, r19
 762:	41 e4       	ldi	r20, 0x41	; 65
 764:	11 96       	adiw	r26, 0x01	; 1
 766:	4c 93       	st	X, r20
 768:	11 97       	sbiw	r26, 0x01	; 1
 76a:	12 96       	adiw	r26, 0x02	; 2
 76c:	3c 93       	st	X, r19
 76e:	06 c0       	rjmp	.+12     	; 0x77c <dtoa_prf+0xc2>
 770:	3e e6       	ldi	r19, 0x6E	; 110
 772:	f6 01       	movw	r30, r12
 774:	30 83       	st	Z, r19
 776:	41 e6       	ldi	r20, 0x61	; 97
 778:	41 83       	std	Z+1, r20	; 0x01
 77a:	32 83       	std	Z+2, r19	; 0x02
 77c:	fc 01       	movw	r30, r24
 77e:	32 2f       	mov	r19, r18
 780:	40 e2       	ldi	r20, 0x20	; 32
 782:	33 23       	and	r19, r19
 784:	09 f4       	brne	.+2      	; 0x788 <dtoa_prf+0xce>
 786:	42 c0       	rjmp	.+132    	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 788:	41 93       	st	Z+, r20
 78a:	31 50       	subi	r19, 0x01	; 1
 78c:	fa cf       	rjmp	.-12     	; 0x782 <dtoa_prf+0xc8>
 78e:	42 ff       	sbrs	r20, 2
 790:	44 c0       	rjmp	.+136    	; 0x81a <__DATA_REGION_LENGTH__+0x1a>
 792:	91 11       	cpse	r25, r1
 794:	02 c0       	rjmp	.+4      	; 0x79a <dtoa_prf+0xe0>
 796:	83 e0       	ldi	r24, 0x03	; 3
 798:	01 c0       	rjmp	.+2      	; 0x79c <dtoa_prf+0xe2>
 79a:	84 e0       	ldi	r24, 0x04	; 4
 79c:	81 17       	cp	r24, r17
 79e:	18 f4       	brcc	.+6      	; 0x7a6 <dtoa_prf+0xec>
 7a0:	21 2f       	mov	r18, r17
 7a2:	28 1b       	sub	r18, r24
 7a4:	01 c0       	rjmp	.+2      	; 0x7a8 <dtoa_prf+0xee>
 7a6:	20 e0       	ldi	r18, 0x00	; 0
 7a8:	51 11       	cpse	r21, r1
 7aa:	0b c0       	rjmp	.+22     	; 0x7c2 <dtoa_prf+0x108>
 7ac:	f6 01       	movw	r30, r12
 7ae:	82 2f       	mov	r24, r18
 7b0:	30 e2       	ldi	r19, 0x20	; 32
 7b2:	88 23       	and	r24, r24
 7b4:	19 f0       	breq	.+6      	; 0x7bc <dtoa_prf+0x102>
 7b6:	31 93       	st	Z+, r19
 7b8:	81 50       	subi	r24, 0x01	; 1
 7ba:	fb cf       	rjmp	.-10     	; 0x7b2 <dtoa_prf+0xf8>
 7bc:	c2 0e       	add	r12, r18
 7be:	d1 1c       	adc	r13, r1
 7c0:	20 e0       	ldi	r18, 0x00	; 0
 7c2:	99 23       	and	r25, r25
 7c4:	29 f0       	breq	.+10     	; 0x7d0 <dtoa_prf+0x116>
 7c6:	d6 01       	movw	r26, r12
 7c8:	9c 93       	st	X, r25
 7ca:	f6 01       	movw	r30, r12
 7cc:	31 96       	adiw	r30, 0x01	; 1
 7ce:	6f 01       	movw	r12, r30
 7d0:	c6 01       	movw	r24, r12
 7d2:	03 96       	adiw	r24, 0x03	; 3
 7d4:	e2 fe       	sbrs	r14, 2
 7d6:	0b c0       	rjmp	.+22     	; 0x7ee <dtoa_prf+0x134>
 7d8:	39 e4       	ldi	r19, 0x49	; 73
 7da:	d6 01       	movw	r26, r12
 7dc:	3c 93       	st	X, r19
 7de:	3e e4       	ldi	r19, 0x4E	; 78
 7e0:	11 96       	adiw	r26, 0x01	; 1
 7e2:	3c 93       	st	X, r19
 7e4:	11 97       	sbiw	r26, 0x01	; 1
 7e6:	36 e4       	ldi	r19, 0x46	; 70
 7e8:	12 96       	adiw	r26, 0x02	; 2
 7ea:	3c 93       	st	X, r19
 7ec:	07 c0       	rjmp	.+14     	; 0x7fc <dtoa_prf+0x142>
 7ee:	39 e6       	ldi	r19, 0x69	; 105
 7f0:	f6 01       	movw	r30, r12
 7f2:	30 83       	st	Z, r19
 7f4:	3e e6       	ldi	r19, 0x6E	; 110
 7f6:	31 83       	std	Z+1, r19	; 0x01
 7f8:	36 e6       	ldi	r19, 0x66	; 102
 7fa:	32 83       	std	Z+2, r19	; 0x02
 7fc:	fc 01       	movw	r30, r24
 7fe:	32 2f       	mov	r19, r18
 800:	40 e2       	ldi	r20, 0x20	; 32
 802:	33 23       	and	r19, r19
 804:	19 f0       	breq	.+6      	; 0x80c <__DATA_REGION_LENGTH__+0xc>
 806:	41 93       	st	Z+, r20
 808:	31 50       	subi	r19, 0x01	; 1
 80a:	fb cf       	rjmp	.-10     	; 0x802 <__DATA_REGION_LENGTH__+0x2>
 80c:	fc 01       	movw	r30, r24
 80e:	e2 0f       	add	r30, r18
 810:	f1 1d       	adc	r31, r1
 812:	10 82       	st	Z, r1
 814:	8e ef       	ldi	r24, 0xFE	; 254
 816:	9f ef       	ldi	r25, 0xFF	; 255
 818:	a6 c0       	rjmp	.+332    	; 0x966 <__stack+0x67>
 81a:	21 e0       	ldi	r18, 0x01	; 1
 81c:	30 e0       	ldi	r19, 0x00	; 0
 81e:	91 11       	cpse	r25, r1
 820:	02 c0       	rjmp	.+4      	; 0x826 <__DATA_REGION_LENGTH__+0x26>
 822:	20 e0       	ldi	r18, 0x00	; 0
 824:	30 e0       	ldi	r19, 0x00	; 0
 826:	16 16       	cp	r1, r22
 828:	17 06       	cpc	r1, r23
 82a:	1c f4       	brge	.+6      	; 0x832 <__DATA_REGION_LENGTH__+0x32>
 82c:	fb 01       	movw	r30, r22
 82e:	31 96       	adiw	r30, 0x01	; 1
 830:	02 c0       	rjmp	.+4      	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 832:	e1 e0       	ldi	r30, 0x01	; 1
 834:	f0 e0       	ldi	r31, 0x00	; 0
 836:	2e 0f       	add	r18, r30
 838:	3f 1f       	adc	r19, r31
 83a:	bb 20       	and	r11, r11
 83c:	21 f0       	breq	.+8      	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 83e:	eb 2d       	mov	r30, r11
 840:	f0 e0       	ldi	r31, 0x00	; 0
 842:	31 96       	adiw	r30, 0x01	; 1
 844:	02 c0       	rjmp	.+4      	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
 846:	e0 e0       	ldi	r30, 0x00	; 0
 848:	f0 e0       	ldi	r31, 0x00	; 0
 84a:	2e 0f       	add	r18, r30
 84c:	3f 1f       	adc	r19, r31
 84e:	e1 2f       	mov	r30, r17
 850:	f0 e0       	ldi	r31, 0x00	; 0
 852:	2e 17       	cp	r18, r30
 854:	3f 07       	cpc	r19, r31
 856:	1c f4       	brge	.+6      	; 0x85e <__DATA_REGION_LENGTH__+0x5e>
 858:	12 1b       	sub	r17, r18
 85a:	21 2f       	mov	r18, r17
 85c:	01 c0       	rjmp	.+2      	; 0x860 <__DATA_REGION_LENGTH__+0x60>
 85e:	20 e0       	ldi	r18, 0x00	; 0
 860:	8e 2d       	mov	r24, r14
 862:	88 71       	andi	r24, 0x18	; 24
 864:	59 f4       	brne	.+22     	; 0x87c <__DATA_REGION_LENGTH__+0x7c>
 866:	f6 01       	movw	r30, r12
 868:	82 2f       	mov	r24, r18
 86a:	30 e2       	ldi	r19, 0x20	; 32
 86c:	88 23       	and	r24, r24
 86e:	19 f0       	breq	.+6      	; 0x876 <__DATA_REGION_LENGTH__+0x76>
 870:	31 93       	st	Z+, r19
 872:	81 50       	subi	r24, 0x01	; 1
 874:	fb cf       	rjmp	.-10     	; 0x86c <__DATA_REGION_LENGTH__+0x6c>
 876:	c2 0e       	add	r12, r18
 878:	d1 1c       	adc	r13, r1
 87a:	20 e0       	ldi	r18, 0x00	; 0
 87c:	99 23       	and	r25, r25
 87e:	29 f0       	breq	.+10     	; 0x88a <__DATA_REGION_LENGTH__+0x8a>
 880:	d6 01       	movw	r26, r12
 882:	9c 93       	st	X, r25
 884:	f6 01       	movw	r30, r12
 886:	31 96       	adiw	r30, 0x01	; 1
 888:	6f 01       	movw	r12, r30
 88a:	51 11       	cpse	r21, r1
 88c:	0b c0       	rjmp	.+22     	; 0x8a4 <__DATA_REGION_LENGTH__+0xa4>
 88e:	f6 01       	movw	r30, r12
 890:	82 2f       	mov	r24, r18
 892:	90 e3       	ldi	r25, 0x30	; 48
 894:	88 23       	and	r24, r24
 896:	19 f0       	breq	.+6      	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 898:	91 93       	st	Z+, r25
 89a:	81 50       	subi	r24, 0x01	; 1
 89c:	fb cf       	rjmp	.-10     	; 0x894 <__DATA_REGION_LENGTH__+0x94>
 89e:	c2 0e       	add	r12, r18
 8a0:	d1 1c       	adc	r13, r1
 8a2:	20 e0       	ldi	r18, 0x00	; 0
 8a4:	0f 2d       	mov	r16, r15
 8a6:	06 0f       	add	r16, r22
 8a8:	9a 81       	ldd	r25, Y+2	; 0x02
 8aa:	34 2f       	mov	r19, r20
 8ac:	30 71       	andi	r19, 0x10	; 16
 8ae:	44 ff       	sbrs	r20, 4
 8b0:	03 c0       	rjmp	.+6      	; 0x8b8 <__DATA_REGION_LENGTH__+0xb8>
 8b2:	91 33       	cpi	r25, 0x31	; 49
 8b4:	09 f4       	brne	.+2      	; 0x8b8 <__DATA_REGION_LENGTH__+0xb8>
 8b6:	01 50       	subi	r16, 0x01	; 1
 8b8:	10 16       	cp	r1, r16
 8ba:	24 f4       	brge	.+8      	; 0x8c4 <__DATA_REGION_LENGTH__+0xc4>
 8bc:	09 30       	cpi	r16, 0x09	; 9
 8be:	18 f0       	brcs	.+6      	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
 8c0:	08 e0       	ldi	r16, 0x08	; 8
 8c2:	01 c0       	rjmp	.+2      	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
 8c4:	01 e0       	ldi	r16, 0x01	; 1
 8c6:	ab 01       	movw	r20, r22
 8c8:	77 ff       	sbrs	r23, 7
 8ca:	02 c0       	rjmp	.+4      	; 0x8d0 <__DATA_REGION_LENGTH__+0xd0>
 8cc:	40 e0       	ldi	r20, 0x00	; 0
 8ce:	50 e0       	ldi	r21, 0x00	; 0
 8d0:	fb 01       	movw	r30, r22
 8d2:	e4 1b       	sub	r30, r20
 8d4:	f5 0b       	sbc	r31, r21
 8d6:	a1 e0       	ldi	r26, 0x01	; 1
 8d8:	b0 e0       	ldi	r27, 0x00	; 0
 8da:	ac 0f       	add	r26, r28
 8dc:	bd 1f       	adc	r27, r29
 8de:	ea 0f       	add	r30, r26
 8e0:	fb 1f       	adc	r31, r27
 8e2:	8e e2       	ldi	r24, 0x2E	; 46
 8e4:	a8 2e       	mov	r10, r24
 8e6:	4b 01       	movw	r8, r22
 8e8:	80 1a       	sub	r8, r16
 8ea:	91 08       	sbc	r9, r1
 8ec:	0b 2d       	mov	r16, r11
 8ee:	10 e0       	ldi	r17, 0x00	; 0
 8f0:	11 95       	neg	r17
 8f2:	01 95       	neg	r16
 8f4:	11 09       	sbc	r17, r1
 8f6:	4f 3f       	cpi	r20, 0xFF	; 255
 8f8:	bf ef       	ldi	r27, 0xFF	; 255
 8fa:	5b 07       	cpc	r21, r27
 8fc:	21 f4       	brne	.+8      	; 0x906 <__stack+0x7>
 8fe:	d6 01       	movw	r26, r12
 900:	ac 92       	st	X, r10
 902:	11 96       	adiw	r26, 0x01	; 1
 904:	6d 01       	movw	r12, r26
 906:	64 17       	cp	r22, r20
 908:	75 07       	cpc	r23, r21
 90a:	2c f0       	brlt	.+10     	; 0x916 <__stack+0x17>
 90c:	84 16       	cp	r8, r20
 90e:	95 06       	cpc	r9, r21
 910:	14 f4       	brge	.+4      	; 0x916 <__stack+0x17>
 912:	81 81       	ldd	r24, Z+1	; 0x01
 914:	01 c0       	rjmp	.+2      	; 0x918 <__stack+0x19>
 916:	80 e3       	ldi	r24, 0x30	; 48
 918:	41 50       	subi	r20, 0x01	; 1
 91a:	51 09       	sbc	r21, r1
 91c:	31 96       	adiw	r30, 0x01	; 1
 91e:	d6 01       	movw	r26, r12
 920:	11 96       	adiw	r26, 0x01	; 1
 922:	7d 01       	movw	r14, r26
 924:	40 17       	cp	r20, r16
 926:	51 07       	cpc	r21, r17
 928:	24 f0       	brlt	.+8      	; 0x932 <__stack+0x33>
 92a:	d6 01       	movw	r26, r12
 92c:	8c 93       	st	X, r24
 92e:	67 01       	movw	r12, r14
 930:	e2 cf       	rjmp	.-60     	; 0x8f6 <__DATA_REGION_LENGTH__+0xf6>
 932:	64 17       	cp	r22, r20
 934:	75 07       	cpc	r23, r21
 936:	39 f4       	brne	.+14     	; 0x946 <__stack+0x47>
 938:	96 33       	cpi	r25, 0x36	; 54
 93a:	20 f4       	brcc	.+8      	; 0x944 <__stack+0x45>
 93c:	95 33       	cpi	r25, 0x35	; 53
 93e:	19 f4       	brne	.+6      	; 0x946 <__stack+0x47>
 940:	31 11       	cpse	r19, r1
 942:	01 c0       	rjmp	.+2      	; 0x946 <__stack+0x47>
 944:	81 e3       	ldi	r24, 0x31	; 49
 946:	f6 01       	movw	r30, r12
 948:	80 83       	st	Z, r24
 94a:	f7 01       	movw	r30, r14
 94c:	82 2f       	mov	r24, r18
 94e:	90 e2       	ldi	r25, 0x20	; 32
 950:	88 23       	and	r24, r24
 952:	19 f0       	breq	.+6      	; 0x95a <__stack+0x5b>
 954:	91 93       	st	Z+, r25
 956:	81 50       	subi	r24, 0x01	; 1
 958:	fb cf       	rjmp	.-10     	; 0x950 <__stack+0x51>
 95a:	f7 01       	movw	r30, r14
 95c:	e2 0f       	add	r30, r18
 95e:	f1 1d       	adc	r31, r1
 960:	10 82       	st	Z, r1
 962:	80 e0       	ldi	r24, 0x00	; 0
 964:	90 e0       	ldi	r25, 0x00	; 0
 966:	29 96       	adiw	r28, 0x09	; 9
 968:	ec e0       	ldi	r30, 0x0C	; 12
 96a:	0c 94 b1 05 	jmp	0xb62	; 0xb62 <__epilogue_restores__+0xc>

0000096e <__ftoa_engine>:
 96e:	28 30       	cpi	r18, 0x08	; 8
 970:	08 f0       	brcs	.+2      	; 0x974 <__ftoa_engine+0x6>
 972:	27 e0       	ldi	r18, 0x07	; 7
 974:	33 27       	eor	r19, r19
 976:	da 01       	movw	r26, r20
 978:	99 0f       	add	r25, r25
 97a:	31 1d       	adc	r19, r1
 97c:	87 fd       	sbrc	r24, 7
 97e:	91 60       	ori	r25, 0x01	; 1
 980:	00 96       	adiw	r24, 0x00	; 0
 982:	61 05       	cpc	r22, r1
 984:	71 05       	cpc	r23, r1
 986:	39 f4       	brne	.+14     	; 0x996 <__ftoa_engine+0x28>
 988:	32 60       	ori	r19, 0x02	; 2
 98a:	2e 5f       	subi	r18, 0xFE	; 254
 98c:	3d 93       	st	X+, r19
 98e:	30 e3       	ldi	r19, 0x30	; 48
 990:	2a 95       	dec	r18
 992:	e1 f7       	brne	.-8      	; 0x98c <__ftoa_engine+0x1e>
 994:	08 95       	ret
 996:	9f 3f       	cpi	r25, 0xFF	; 255
 998:	30 f0       	brcs	.+12     	; 0x9a6 <__ftoa_engine+0x38>
 99a:	80 38       	cpi	r24, 0x80	; 128
 99c:	71 05       	cpc	r23, r1
 99e:	61 05       	cpc	r22, r1
 9a0:	09 f0       	breq	.+2      	; 0x9a4 <__ftoa_engine+0x36>
 9a2:	3c 5f       	subi	r19, 0xFC	; 252
 9a4:	3c 5f       	subi	r19, 0xFC	; 252
 9a6:	3d 93       	st	X+, r19
 9a8:	91 30       	cpi	r25, 0x01	; 1
 9aa:	08 f0       	brcs	.+2      	; 0x9ae <__ftoa_engine+0x40>
 9ac:	80 68       	ori	r24, 0x80	; 128
 9ae:	91 1d       	adc	r25, r1
 9b0:	df 93       	push	r29
 9b2:	cf 93       	push	r28
 9b4:	1f 93       	push	r17
 9b6:	0f 93       	push	r16
 9b8:	ff 92       	push	r15
 9ba:	ef 92       	push	r14
 9bc:	19 2f       	mov	r17, r25
 9be:	98 7f       	andi	r25, 0xF8	; 248
 9c0:	96 95       	lsr	r25
 9c2:	e9 2f       	mov	r30, r25
 9c4:	96 95       	lsr	r25
 9c6:	96 95       	lsr	r25
 9c8:	e9 0f       	add	r30, r25
 9ca:	ff 27       	eor	r31, r31
 9cc:	ee 53       	subi	r30, 0x3E	; 62
 9ce:	ff 4f       	sbci	r31, 0xFF	; 255
 9d0:	99 27       	eor	r25, r25
 9d2:	33 27       	eor	r19, r19
 9d4:	ee 24       	eor	r14, r14
 9d6:	ff 24       	eor	r15, r15
 9d8:	a7 01       	movw	r20, r14
 9da:	e7 01       	movw	r28, r14
 9dc:	05 90       	lpm	r0, Z+
 9de:	08 94       	sec
 9e0:	07 94       	ror	r0
 9e2:	28 f4       	brcc	.+10     	; 0x9ee <__ftoa_engine+0x80>
 9e4:	36 0f       	add	r19, r22
 9e6:	e7 1e       	adc	r14, r23
 9e8:	f8 1e       	adc	r15, r24
 9ea:	49 1f       	adc	r20, r25
 9ec:	51 1d       	adc	r21, r1
 9ee:	66 0f       	add	r22, r22
 9f0:	77 1f       	adc	r23, r23
 9f2:	88 1f       	adc	r24, r24
 9f4:	99 1f       	adc	r25, r25
 9f6:	06 94       	lsr	r0
 9f8:	a1 f7       	brne	.-24     	; 0x9e2 <__ftoa_engine+0x74>
 9fa:	05 90       	lpm	r0, Z+
 9fc:	07 94       	ror	r0
 9fe:	28 f4       	brcc	.+10     	; 0xa0a <__ftoa_engine+0x9c>
 a00:	e7 0e       	add	r14, r23
 a02:	f8 1e       	adc	r15, r24
 a04:	49 1f       	adc	r20, r25
 a06:	56 1f       	adc	r21, r22
 a08:	c1 1d       	adc	r28, r1
 a0a:	77 0f       	add	r23, r23
 a0c:	88 1f       	adc	r24, r24
 a0e:	99 1f       	adc	r25, r25
 a10:	66 1f       	adc	r22, r22
 a12:	06 94       	lsr	r0
 a14:	a1 f7       	brne	.-24     	; 0x9fe <__ftoa_engine+0x90>
 a16:	05 90       	lpm	r0, Z+
 a18:	07 94       	ror	r0
 a1a:	28 f4       	brcc	.+10     	; 0xa26 <__ftoa_engine+0xb8>
 a1c:	f8 0e       	add	r15, r24
 a1e:	49 1f       	adc	r20, r25
 a20:	56 1f       	adc	r21, r22
 a22:	c7 1f       	adc	r28, r23
 a24:	d1 1d       	adc	r29, r1
 a26:	88 0f       	add	r24, r24
 a28:	99 1f       	adc	r25, r25
 a2a:	66 1f       	adc	r22, r22
 a2c:	77 1f       	adc	r23, r23
 a2e:	06 94       	lsr	r0
 a30:	a1 f7       	brne	.-24     	; 0xa1a <__ftoa_engine+0xac>
 a32:	05 90       	lpm	r0, Z+
 a34:	07 94       	ror	r0
 a36:	20 f4       	brcc	.+8      	; 0xa40 <__ftoa_engine+0xd2>
 a38:	49 0f       	add	r20, r25
 a3a:	56 1f       	adc	r21, r22
 a3c:	c7 1f       	adc	r28, r23
 a3e:	d8 1f       	adc	r29, r24
 a40:	99 0f       	add	r25, r25
 a42:	66 1f       	adc	r22, r22
 a44:	77 1f       	adc	r23, r23
 a46:	88 1f       	adc	r24, r24
 a48:	06 94       	lsr	r0
 a4a:	a9 f7       	brne	.-22     	; 0xa36 <__ftoa_engine+0xc8>
 a4c:	84 91       	lpm	r24, Z
 a4e:	10 95       	com	r17
 a50:	17 70       	andi	r17, 0x07	; 7
 a52:	41 f0       	breq	.+16     	; 0xa64 <__ftoa_engine+0xf6>
 a54:	d6 95       	lsr	r29
 a56:	c7 95       	ror	r28
 a58:	57 95       	ror	r21
 a5a:	47 95       	ror	r20
 a5c:	f7 94       	ror	r15
 a5e:	e7 94       	ror	r14
 a60:	1a 95       	dec	r17
 a62:	c1 f7       	brne	.-16     	; 0xa54 <__ftoa_engine+0xe6>
 a64:	e8 e6       	ldi	r30, 0x68	; 104
 a66:	f0 e0       	ldi	r31, 0x00	; 0
 a68:	68 94       	set
 a6a:	15 90       	lpm	r1, Z+
 a6c:	15 91       	lpm	r17, Z+
 a6e:	35 91       	lpm	r19, Z+
 a70:	65 91       	lpm	r22, Z+
 a72:	95 91       	lpm	r25, Z+
 a74:	05 90       	lpm	r0, Z+
 a76:	7f e2       	ldi	r23, 0x2F	; 47
 a78:	73 95       	inc	r23
 a7a:	e1 18       	sub	r14, r1
 a7c:	f1 0a       	sbc	r15, r17
 a7e:	43 0b       	sbc	r20, r19
 a80:	56 0b       	sbc	r21, r22
 a82:	c9 0b       	sbc	r28, r25
 a84:	d0 09       	sbc	r29, r0
 a86:	c0 f7       	brcc	.-16     	; 0xa78 <__ftoa_engine+0x10a>
 a88:	e1 0c       	add	r14, r1
 a8a:	f1 1e       	adc	r15, r17
 a8c:	43 1f       	adc	r20, r19
 a8e:	56 1f       	adc	r21, r22
 a90:	c9 1f       	adc	r28, r25
 a92:	d0 1d       	adc	r29, r0
 a94:	7e f4       	brtc	.+30     	; 0xab4 <__ftoa_engine+0x146>
 a96:	70 33       	cpi	r23, 0x30	; 48
 a98:	11 f4       	brne	.+4      	; 0xa9e <__ftoa_engine+0x130>
 a9a:	8a 95       	dec	r24
 a9c:	e6 cf       	rjmp	.-52     	; 0xa6a <__ftoa_engine+0xfc>
 a9e:	e8 94       	clt
 aa0:	01 50       	subi	r16, 0x01	; 1
 aa2:	30 f0       	brcs	.+12     	; 0xab0 <__ftoa_engine+0x142>
 aa4:	08 0f       	add	r16, r24
 aa6:	0a f4       	brpl	.+2      	; 0xaaa <__ftoa_engine+0x13c>
 aa8:	00 27       	eor	r16, r16
 aaa:	02 17       	cp	r16, r18
 aac:	08 f4       	brcc	.+2      	; 0xab0 <__ftoa_engine+0x142>
 aae:	20 2f       	mov	r18, r16
 ab0:	23 95       	inc	r18
 ab2:	02 2f       	mov	r16, r18
 ab4:	7a 33       	cpi	r23, 0x3A	; 58
 ab6:	28 f0       	brcs	.+10     	; 0xac2 <__ftoa_engine+0x154>
 ab8:	79 e3       	ldi	r23, 0x39	; 57
 aba:	7d 93       	st	X+, r23
 abc:	2a 95       	dec	r18
 abe:	e9 f7       	brne	.-6      	; 0xaba <__ftoa_engine+0x14c>
 ac0:	10 c0       	rjmp	.+32     	; 0xae2 <__ftoa_engine+0x174>
 ac2:	7d 93       	st	X+, r23
 ac4:	2a 95       	dec	r18
 ac6:	89 f6       	brne	.-94     	; 0xa6a <__ftoa_engine+0xfc>
 ac8:	06 94       	lsr	r0
 aca:	97 95       	ror	r25
 acc:	67 95       	ror	r22
 ace:	37 95       	ror	r19
 ad0:	17 95       	ror	r17
 ad2:	17 94       	ror	r1
 ad4:	e1 18       	sub	r14, r1
 ad6:	f1 0a       	sbc	r15, r17
 ad8:	43 0b       	sbc	r20, r19
 ada:	56 0b       	sbc	r21, r22
 adc:	c9 0b       	sbc	r28, r25
 ade:	d0 09       	sbc	r29, r0
 ae0:	98 f0       	brcs	.+38     	; 0xb08 <__ftoa_engine+0x19a>
 ae2:	23 95       	inc	r18
 ae4:	7e 91       	ld	r23, -X
 ae6:	73 95       	inc	r23
 ae8:	7a 33       	cpi	r23, 0x3A	; 58
 aea:	08 f0       	brcs	.+2      	; 0xaee <__ftoa_engine+0x180>
 aec:	70 e3       	ldi	r23, 0x30	; 48
 aee:	7c 93       	st	X, r23
 af0:	20 13       	cpse	r18, r16
 af2:	b8 f7       	brcc	.-18     	; 0xae2 <__ftoa_engine+0x174>
 af4:	7e 91       	ld	r23, -X
 af6:	70 61       	ori	r23, 0x10	; 16
 af8:	7d 93       	st	X+, r23
 afa:	30 f0       	brcs	.+12     	; 0xb08 <__ftoa_engine+0x19a>
 afc:	83 95       	inc	r24
 afe:	71 e3       	ldi	r23, 0x31	; 49
 b00:	7d 93       	st	X+, r23
 b02:	70 e3       	ldi	r23, 0x30	; 48
 b04:	2a 95       	dec	r18
 b06:	e1 f7       	brne	.-8      	; 0xb00 <__ftoa_engine+0x192>
 b08:	11 24       	eor	r1, r1
 b0a:	ef 90       	pop	r14
 b0c:	ff 90       	pop	r15
 b0e:	0f 91       	pop	r16
 b10:	1f 91       	pop	r17
 b12:	cf 91       	pop	r28
 b14:	df 91       	pop	r29
 b16:	99 27       	eor	r25, r25
 b18:	87 fd       	sbrc	r24, 7
 b1a:	90 95       	com	r25
 b1c:	08 95       	ret

00000b1e <__prologue_saves__>:
 b1e:	2f 92       	push	r2
 b20:	3f 92       	push	r3
 b22:	4f 92       	push	r4
 b24:	5f 92       	push	r5
 b26:	6f 92       	push	r6
 b28:	7f 92       	push	r7
 b2a:	8f 92       	push	r8
 b2c:	9f 92       	push	r9
 b2e:	af 92       	push	r10
 b30:	bf 92       	push	r11
 b32:	cf 92       	push	r12
 b34:	df 92       	push	r13
 b36:	ef 92       	push	r14
 b38:	ff 92       	push	r15
 b3a:	0f 93       	push	r16
 b3c:	1f 93       	push	r17
 b3e:	cf 93       	push	r28
 b40:	df 93       	push	r29
 b42:	cd b7       	in	r28, 0x3d	; 61
 b44:	de b7       	in	r29, 0x3e	; 62
 b46:	ca 1b       	sub	r28, r26
 b48:	db 0b       	sbc	r29, r27
 b4a:	0f b6       	in	r0, 0x3f	; 63
 b4c:	f8 94       	cli
 b4e:	de bf       	out	0x3e, r29	; 62
 b50:	0f be       	out	0x3f, r0	; 63
 b52:	cd bf       	out	0x3d, r28	; 61
 b54:	09 94       	ijmp

00000b56 <__epilogue_restores__>:
 b56:	2a 88       	ldd	r2, Y+18	; 0x12
 b58:	39 88       	ldd	r3, Y+17	; 0x11
 b5a:	48 88       	ldd	r4, Y+16	; 0x10
 b5c:	5f 84       	ldd	r5, Y+15	; 0x0f
 b5e:	6e 84       	ldd	r6, Y+14	; 0x0e
 b60:	7d 84       	ldd	r7, Y+13	; 0x0d
 b62:	8c 84       	ldd	r8, Y+12	; 0x0c
 b64:	9b 84       	ldd	r9, Y+11	; 0x0b
 b66:	aa 84       	ldd	r10, Y+10	; 0x0a
 b68:	b9 84       	ldd	r11, Y+9	; 0x09
 b6a:	c8 84       	ldd	r12, Y+8	; 0x08
 b6c:	df 80       	ldd	r13, Y+7	; 0x07
 b6e:	ee 80       	ldd	r14, Y+6	; 0x06
 b70:	fd 80       	ldd	r15, Y+5	; 0x05
 b72:	0c 81       	ldd	r16, Y+4	; 0x04
 b74:	1b 81       	ldd	r17, Y+3	; 0x03
 b76:	aa 81       	ldd	r26, Y+2	; 0x02
 b78:	b9 81       	ldd	r27, Y+1	; 0x01
 b7a:	ce 0f       	add	r28, r30
 b7c:	d1 1d       	adc	r29, r1
 b7e:	0f b6       	in	r0, 0x3f	; 63
 b80:	f8 94       	cli
 b82:	de bf       	out	0x3e, r29	; 62
 b84:	0f be       	out	0x3f, r0	; 63
 b86:	cd bf       	out	0x3d, r28	; 61
 b88:	ed 01       	movw	r28, r26
 b8a:	08 95       	ret

00000b8c <_exit>:
 b8c:	f8 94       	cli

00000b8e <__stop_program>:
 b8e:	ff cf       	rjmp	.-2      	; 0xb8e <__stop_program>
